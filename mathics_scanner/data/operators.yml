# Information about Wolfram Language named operators.

# This information comes largely from Robert L. Jacobson's Table of
# Wolfram Language Operators found at:
# https://github.com/WLTools/LanguageSpec/blob/master/docs/Specification/Syntax/Operator%20Table.csv
#
# We have copy of this in the Mathics-Scanner repository.
# The CSV file has been converted to YAML using mathics_scanner/generate/operator_csv_to_yaml.py
#
# Some operator information attached to individual character names can
# be found in file named-characters.yml.
#
#
# For a description of many of the fields below, see
#  https://www.robertjacobson.dev/posts/2018-09-03-generalizing-pemdas-what-is-an-operator/
# and:
# https://www.robertjacobson.dev/posts/2018-09-04-defining-the-wolfram-language-part-2-operator-properties/
#
# However, I will summmarize some of the field descriptions.
#
# precedence
# ----------
#
# Many fields below mention precedence, and the WMA builtin-function
# Precedence[]. When given an operator, this function gives an integer
# used in specifying the order operations occur when one operator is
# juxtaposed against another operator.  A higher value means that the
# operator binds before an operator with a lower value.

# For example, the Times precedence 400 is higher than the Plus
# precedence 310 because a + b * c is a + (b * c), not (a + b) * c.
# Precedence is also used to force multi-character ASCII symbols like
# |-> to get treated as one unit and not split into two operators like
# | and ->. So the precedence of |-> has to be higher than |.
#
#
# arity (https://en.wikipedia.org/wiki/Arity)
# -----
#
# A fancy word for how many operands (arguments) the operator takes;
# it is some sort of positive integer. Acceptable values found in our table
# are:
#  - NullAry (0 arguments),
#  - Unary (1 argument),
#  - Binary (2 arguments)
#  - Ternary (3 arguments)
#  - n-ary (n arguments)
#
#
#   actual-precedence: a precedence value that programs can use.
#
#   Precedence-corrected: the value used in Mathics3.

#   WolframLanguageData: a "PrecedenceRanks" value returned using:
#       WolframLanguageData[*operator_name*, "PrecedenceRanks"]
#     Example:
#       In[1] := WolframLanguageData["AddTo", "PrecedenceRanks"]
#       Out[1]= {{expr1 +=expr2 , AddTo[expr1 ,expr2]} -> 73
#
#     Note that 73 uses a diffrent precedence scheme than the one
#     given by Precedence and used in Mathics3.
#
#     Also Note that WolframLanguageData can also be used to give the
#     ASCII and unicode character representations:

#       In[2] := WolframLanguageData["AddTo", "ShortNotations"]
#       Out[2]= {+=}
#       In[2] := WolframLanguageData["GreaterEqual", "ShortNotations"]
#       Out[7]= {>=, ≥}
#
#   usage: when it exists, an example of the use of this operator
#
#   parse: when "usage" exists, a parse of the example

#   FullForm: when "usage" exists, the FullForm translation of the example

#   associativity: when two or more of the same operator is used, which group to
#                 evaluate first. One of:
#       - None
#       - Non
#       - Right
#       - Left
#       - Missing["Unknown"]
#
#   meaningful: boolean ??


AddTo:
  actual-precedence: 120
  precedence: 100
  WolframLanguageData: 69
  WolframLanguageData-corrected: 69
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 230
  # N-tokens: {}
  # L-tokens: {"+="}
  # O-tokens: {}
  usage: "expr1 += expr2"
  # parse: {"AddTo", "[", "expr1", ",", "expr2", "]"}
  FullForm: AddTo[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: right
  meaningful: true
  # comments:

Alternatives:
  actual-precedence: 190
  precedence: 160
  WolframLanguageData: 63
  WolframLanguageData-corrected: 64
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 276
  # N-tokens: {}
  # L-tokens: {"|"}
  # O-tokens: {}
  usage: "p1 | p2"
  # parse:  expr2
  FullForm: {"Alternatives", "[", "expr1", ",", "expr2", "]"}
  arity: Alternatives[expr1, expr2]
  affix: Binary
  associativity: infix
  meaningful: none
  # comments: True

And:
  actual-precedence: 290
  Precedence-Function: 215
  precedence: 220
  WolframLanguageData: 55
  WolframLanguageData-corrected: 55
  UnicodeCharacters.tr: 330
  UnicodeCharacters-corrected.tr: 330
  # N-tokens: {}
  # L-tokens: {"&&", "∧"}
  # O-tokens: {}
  usage: "expr1 && expr2;  expr1 ∧ expr2"
  # parse: {"And", "[", "expr1", ",", "expr2", "]"}
  FullForm: And[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: true
  # comments:

AngleBracket:
  actual-precedence: -10
  Precedence-Function: 670
  precedence: 760
  WolframLanguageData:
  WolframLanguageData-corrected: 1
  UnicodeCharacters.tr: -10
  UnicodeCharacters-corrected.tr: -10
  # N-tokens: {"〈"}
  # L-tokens: {}
  # O-tokens: {"〉"}
  usage: "〈expr〉"
  # parse: {"AngleBracket", "[", "expr", ",", "…", "]"}
  FullForm: AngleBracket[expr, \[Ellipsis]]
  arity: n-ary
  affix: Matchfix
  associativity: null
  meaningful: false
  # comments:

Apply:
  actual-precedence: 820
  Precedence-Function: 620
  precedence: 626
  WolframLanguageData: 16
  WolframLanguageData-corrected: 16
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 710
  # N-tokens: {}
  # L-tokens: {"@@"}
  # O-tokens: {}
  usage: "expr1 @@ expr2"
  # parse: {"Apply", "[", "expr1", ",", "expr2", "]"}
  FullForm: Apply[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: right
  meaningful: true
  # comments:

ApplyTo:
  actual-precedence: 75
  precedence: 75
  WolframLanguageData: 76
  WolframLanguageData-corrected: 75
  UnicodeCharacters.tr: None
  UnicodeCharacters-corrected.tr: 75
  # N-tokens: None
  # L-tokens: None
  # O-tokens: None
  # usage: "None"
  # parse: None
  FullForm: None
  arity: Binary
  affix: Infix
  associativity: left
  meaningful: true
  # comments: None

Association:
  actual-precedence: -10
  Precedence-Function: 670
  precedence: 760
  WolframLanguageData:
  WolframLanguageData-corrected: 1
  UnicodeCharacters.tr: -10
  UnicodeCharacters-corrected.tr: -10
  # N-tokens: {"<|", ""}
  # L-tokens: e
  # O-tokens: {"|>", ""}
  usage: "<|expr|>; expr "
  # parse: {"Association", "[", "expr", ",", "…", "]"}
  FullForm: Association[expr, \[Ellipsis]]
  arity: n-ary
  affix: Matchfix
  associativity: null
  meaningful: true
  # comments:

AutoMatch:
  actual-precedence: -10
  Precedence-Function: 670
  precedence: 760
  WolframLanguageData:
  WolframLanguageData-corrected: 1
  UnicodeCharacters.tr: -10
  UnicodeCharacters-corrected.tr: -10
  # N-tokens: {""}
  # L-tokens: {}
  # O-tokens: {""}
  usage: " expr "
  # parse: {"AutoMatch","[","expr","]"}
  FullForm: AutoMatch[expr]
  arity: Unary
  affix: Matchfix
  associativity: null
  meaningful: true
  # comments:

Backslash:
  actual-precedence: 560
  precedence: 460
  WolframLanguageData: 32
  WolframLanguageData-corrected: 32
  UnicodeCharacters.tr: 580
  UnicodeCharacters-corrected.tr: 580
  # N-tokens: {}
  # L-tokens: {"∖"}
  # O-tokens: {}
  usage: "expr1 \ expr2"
  # parse: {"Backslash", "[", "expr1", ",", "expr2", "]"}
  FullForm: Backslash[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

Because:
  actual-precedence: 60
  precedence: 50
  WolframLanguageData: 74
  WolframLanguageData-corrected: 74
  UnicodeCharacters.tr: 201
  UnicodeCharacters-corrected.tr: 201
  # N-tokens: {}
  # L-tokens: {"∵"}
  # O-tokens: {}
  usage: "expr1 ∵ expr2"
  # parse: {"Because", "[", "expr1", ",", "expr2", "]"}
  FullForm: Because[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: left
  meaningful: false
  # comments: Precedence of Therefore and Because are swapped in notebook versus ToExpression.

BlackLenticularBracket:
  actual-precedence: -10
  Precedence-Function: 670
  precedence: 760
  WolframLanguageData:
  WolframLanguageData-corrected: 1
  UnicodeCharacters.tr: -10
  UnicodeCharacters-corrected.tr: -10
  # N-tokens: {"【"}
  # L-tokens: {}
  # O-tokens: {"】"}
  usage: "【expr】"
  # parse:
  FullForm:
  arity: Unary
  affix: Matchfix
  associativity: null
  meaningful: true
  # comments:

Blank:
  actual-precedence: 980
  precedence: 730
  WolframLanguageData: 5
  WolframLanguageData-corrected: 5
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 820
  # N-tokens: {"_"}
  # L-tokens: {}
  # O-tokens: {}
  usage: "_"
  # parse: {"Blank", "[", "]"}
  FullForm: Blank[]
  arity: Nullary
  affix: None
  associativity: null
  meaningful: true
  # comments: A Blank (_) with no accompanying decoration.

BlankHead:
  actual-precedence: 1010
  precedence: 730
  WolframLanguageData: 5
  WolframLanguageData-corrected: 5
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 820
  # N-tokens: {"_"}
  # L-tokens: {}
  # O-tokens: {}
  usage: "_expr"
  # parse: {"Blank", "[", "expr", "]"}
  FullForm: Blank[expr]
  arity: Unary
  affix: Prefix
  associativity: null
  meaningful: true
  # comments:

BlankNullSequence:
  actual-precedence: 980
  precedence: 730
  WolframLanguageData: 5
  WolframLanguageData-corrected: 5
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 820
  # N-tokens: {"___"}
  # L-tokens: {}
  # O-tokens: {}
  usage: "___"
  # parse: {"BlankNullSequence", "[", "]"}
  FullForm: BlankNullSequence[]
  arity: Nullary
  affix: None
  associativity: null
  meaningful: true
  # comments: A BlankNullSequence (___) with no accompanying decoration.

BlankNullSequenceHead:
  actual-precedence: 1010
  precedence: 730
  WolframLanguageData: 5
  WolframLanguageData-corrected: 5
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 820
  # N-tokens: {"___"}
  # L-tokens: {}
  # O-tokens: {}
  usage: "___expr"
  # parse: {"BlankNullSequence", "[", "expr", "]"}
  FullForm: BlankNullSequence[expr]
  arity: Unary
  affix: Prefix
  associativity: null
  meaningful: true
  # comments:

BlankOptional:
  actual-precedence: 980
  precedence: 730
  WolframLanguageData: 5
  WolframLanguageData-corrected: 5
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 820
  # N-tokens: {"_."}
  # L-tokens: {}
  # O-tokens: {}
  usage: "_."
  # parse: {"Optional", "[", "Blank", "]"}
  FullForm: Optional[Blank[]]
  arity: Nullary
  affix: None
  associativity: null
  meaningful: true
  # comments: No name or head.

BlankSequence:
  actual-precedence: 980
  precedence: 730
  WolframLanguageData: 5
  WolframLanguageData-corrected: 5
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 820
  # N-tokens: {"__"}
  # L-tokens: {}
  # O-tokens: {}
  usage: "__"
  # parse: {"BlankSequence", "[", "]"}
  FullForm: BlankSequence[]
  arity: Nullary
  affix: None
  associativity: null
  meaningful: true
  # comments: A BlankNullSequence (__) with no accompanying decoration.

BlankSequenceHead:
  actual-precedence: 1010
  precedence: 730
  WolframLanguageData: 5
  WolframLanguageData-corrected: 5
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 820
  # N-tokens: {"__"}
  # L-tokens: {}
  # O-tokens: {}
  usage: "__expr"
  # parse: {"BlankSequence", "[", "expr", "]"}
  FullForm: BlankSequence[expr]
  arity: Unary
  affix: Prefix
  associativity: null
  meaningful: true
  # comments:

BoxGroup:
  actual-precedence: -10
  Precedence-Function: 670
  precedence: 760
  WolframLanguageData:
  WolframLanguageData-corrected: 1
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: -10
  # N-tokens: {"\("}
  # L-tokens: {}
  # O-tokens: {"\)"}
  usage: "\\(expr\\)"
  # parse: {“LeftRowBox”, expr, “RightRowBox”]
  FullForm: "\\(expr\\)"
  arity: Unary
  affix: Matchfix
  associativity: null
  meaningful: true
  # comments: The interpretation of this operator depends on context. It must contain box sublanguage.

BracketingBar:
  actual-precedence: -10
  Precedence-Function: 670
  precedence: 760
  WolframLanguageData:
  WolframLanguageData-corrected: 1
  UnicodeCharacters.tr: -10
  UnicodeCharacters-corrected.tr: -10
  # N-tokens: {""}
  # L-tokens: {}
  # O-tokens: {""}
  usage: "expr"
  # parse: {"BracketingBar", "[", "expr", ",", "…", "]"}
  FullForm: BracketingBar[expr, \[Ellipsis]]
  arity: n-ary
  affix: Matchfix
  associativity: null
  meaningful: false
  # comments:

Cap:
  actual-precedence: 450
  precedence: 350
  WolframLanguageData: 43
  WolframLanguageData-corrected: 42.5
  UnicodeCharacters.tr: 470
  UnicodeCharacters-corrected.tr: 470
  # N-tokens: {}
  # L-tokens: {"⌢"}
  # O-tokens: {}
  usage: "expr1 ⌢ expr2"
  # parse: {"Cap", "[", "expr1", ",", "expr2", "]"}
  FullForm: Cap[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

CapitalDifferentialD:
  actual-precedence: 720
  Precedence-Function: 550
  precedence: 560
  WolframLanguageData:
  WolframLanguageData-corrected: 23
  UnicodeCharacters.tr: 630
  UnicodeCharacters-corrected.tr: 630
  # N-tokens: {""}
  # L-tokens: {}
  # O-tokens: {}
  usage: "x"
  # parse: {"CapitalDifferentialD", "[", "x", "]"}
  FullForm: CapitalDifferentialD[x]
  arity: Unary
  affix: Prefix
  associativity: right
  meaningful: false
  # comments:

Ceiling:
  actual-precedence: -10
  Precedence-Function: 670
  precedence: 760
  WolframLanguageData:
  WolframLanguageData-corrected: 1
  UnicodeCharacters.tr: -10
  UnicodeCharacters-corrected.tr: -10
  # N-tokens: {"⌈"}
  # L-tokens: {}
  # O-tokens: {"⌉"}
  usage: "⌈expr⌉"
  # parse: {"Ceiling", "[", "expr", "]"}
  FullForm: Ceiling[expr]
  arity: Unary
  affix: Matchfix
  associativity: null
  meaningful: true
  # comments:

CenterDot:
  actual-precedence: 510
  precedence: 410
  WolframLanguageData:
  WolframLanguageData-corrected: 37
  UnicodeCharacters.tr: 530
  UnicodeCharacters-corrected.tr: 530
  # N-tokens: {}
  # L-tokens: {"·"}
  # O-tokens: {}
  usage: "x · y"
  # parse: {"CenterDot", "[", "x", ",", "y", "]"}
  FullForm: CenterDot[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

CircleDot:
  actual-precedence: 660
  precedence: 520
  WolframLanguageData: 26, 35, 37
  WolframLanguageData-corrected: 26
  UnicodeCharacters.tr: 605
  UnicodeCharacters-corrected.tr: 608
  # N-tokens: {}
  # L-tokens: {"⊙"}
  # O-tokens: {}
  usage: "expr1 ⊙ expr2"
  # parse: {"CircleDot", "[", "expr1", ",", "expr2", "]"}
  FullForm: CircleDot[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

CircleMinus:
  actual-precedence: 430
  precedence: 330
  WolframLanguageData: 44
  WolframLanguageData-corrected: 44
  UnicodeCharacters.tr: 450
  UnicodeCharacters-corrected.tr: 450
  # N-tokens: {}
  # L-tokens: {"⊖"}
  # O-tokens: {}
  usage: "expr1 ⊖ expr2"
  # parse: {"CircleMinus", "[", "expr1", ",", "expr2", "]"}
  FullForm: CircleMinus[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: left
  meaningful: false
  # comments:

CirclePlus:
  actual-precedence: 430
  precedence: 330
  WolframLanguageData: 44
  WolframLanguageData-corrected: 44
  UnicodeCharacters.tr: 450
  UnicodeCharacters-corrected.tr: 450
  # N-tokens: {}
  # L-tokens: {"⊕"}
  # O-tokens: {}
  usage: "expr1 ⊕ expr1"
  # parse: {"CirclePlus", "[", "expr1", ",", "expr2", "]"}
  FullForm: CirclePlus[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

CircleTimes:
  actual-precedence: 520
  precedence: 420
  WolframLanguageData:
  WolframLanguageData-corrected: 36
  UnicodeCharacters.tr: 540
  UnicodeCharacters-corrected.tr: 540
  # N-tokens: {}
  # L-tokens: {"⊗"}
  # O-tokens: {}
  usage: "expr1 ⊗ expr2"
  # parse: {"CircleTimes", "[", "expr1", ",", "expr2", "]"}
  FullForm: CircleTimes[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

ClockwiseContourIntegral:
  actual-precedence: 420
  Precedence-Function: 670
  precedence: 325
  WolframLanguageData:
  WolframLanguageData-corrected: 45
  UnicodeCharacters.tr: 455
  UnicodeCharacters-corrected.tr: 445
  # N-tokens: {"∲"}
  # L-tokens: {}
  # O-tokens: {""}
  usage: "∲ f(x) x"
  # parse: {"ClockwiseContourIntegral", "[", "expr1", ",", "expr2", "]"}
  FullForm: Integrate[expr1, expr2]
  arity: Binary
  affix: Compound
  associativity: right
  meaningful: true
  # comments: Usage and Parse may not be correct.

Colon:
  actual-precedence: 100
  precedence: 80
  WolframLanguageData: 71
  WolframLanguageData-corrected: 71
  UnicodeCharacters.tr: 205
  UnicodeCharacters-corrected.tr: 205
  # N-tokens: {}
  # L-tokens: {"∶"}
  # O-tokens: {}
  usage: "expr1 ∶ expr2"
  # parse: {"Colon", "[", "expr1", ",", "expr2", "]"}
  FullForm: Colon[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

Composition:
  actual-precedence: 860
  Precedence-Function: 625
  precedence: 655
  WolframLanguageData: 13
  WolframLanguageData-corrected: 13
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 740
  # N-tokens: {}
  # L-tokens: {"@*"}
  # O-tokens: {}
  usage: "expr1 @* expr2"
  # parse: {"Composition", "[", "expr1", ",", "expr2", "]"}
  FullForm: Composition[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: true
  # comments:

CompoundExpression:
  actual-precedence: 30
  precedence: 10
  WolframLanguageData: 77
  WolframLanguageData-corrected: 77
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 170
  # N-tokens: {}
  # L-tokens: {";"}
  # O-tokens: {}
  usage: "expr1, expr2"
  # parse: {"CompoundExpression", "[", "expr1", ",", "expr2", "]"}
  FullForm: CompoundExpression[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: true
  # comments:

CompoundExpressionNull:
  actual-precedence: 30
  precedence: 10
  WolframLanguageData: 77
  WolframLanguageData-corrected: 77
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 170
  # N-tokens: {}
  # L-tokens: {";"}
  # O-tokens: {}
  usage: "expr1; expr2"
  # parse: {"CompoundExpression", "[", "expr1", ",", "expr2", "]"}
  FullForm: CompoundExpression[expr1, expr2, Null]
  arity: Unary
  affix: Postfix
  associativity: left
  meaningful: true
  # comments:

Condition:
  actual-precedence: 170
  precedence: 130
  WolframLanguageData: 66
  WolframLanguageData-corrected: 66
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 260
  # N-tokens: {}
  # L-tokens: {"/;"}
  # O-tokens: {}
  usage: "expr1 /; expr2"
  # parse: {"Condition", "[", "expr1", ",", "expr2", "]"}
  FullForm: Condition[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: left
  meaningful: true
  # comments:

Conditioned:
  actual-precedence: 240
  precedence: 195
  WolframLanguageData:
  WolframLanguageData-corrected: 59.5
  UnicodeCharacters.tr: 305
  UnicodeCharacters-corrected.tr: 305
  # N-tokens: {}
  # L-tokens: {""}
  # O-tokens: {}
  usage: "expr  cond"
  # parse: {"Conditioned", "[", "expr", ",", "cond", "]"}
  FullForm: Conditioned[expr, cond]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: true
  # comments:

Congruent:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"≡"}
  # O-tokens: {}
  usage: "x ≡ y"
  # parse: {"Congruent", "[", "x", ",", "y", "]"}
  FullForm: Congruent[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

Conjugate:
  actual-precedence: 780
  Precedence-Function: 670
  precedence: 605
  WolframLanguageData: 18
  WolframLanguageData-corrected: 18
  UnicodeCharacters.tr: 695
  UnicodeCharacters-corrected.tr: 695
  # N-tokens: {}
  # L-tokens: {""}
  # O-tokens: {}
  usage: "z"
  # parse: {"Conjugate", "[", "z", "]"}
  FullForm: Conjugate[z]
  arity: Unary
  affix: Postfix
  associativity: left
  meaningful: true
  # comments:

ConjugateTranspose:
  actual-precedence: 780
  Precedence-Function: 670
  precedence: 605
  WolframLanguageData: 18
  WolframLanguageData-corrected: 18
  UnicodeCharacters.tr: 695
  UnicodeCharacters-corrected.tr: 695
  # N-tokens: {}
  # L-tokens: {"", ""}
  # O-tokens: {}
  usage: "m; m"
  # parse: {"ConjugateTranspose", "[", "m", "]"}
  FullForm: ConjugateTranspose[m]
  arity: Unary
  affix: Postfix
  associativity: left
  meaningful: true
  # comments:

ContextPathSeparator:
  actual-precedence: -10
  Precedence-Function: 670
  precedence: 760
  WolframLanguageData:
  WolframLanguageData-corrected: 1
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: -10
  # N-tokens: {}
  # L-tokens: {"`"}
  # O-tokens: {}
  usage: "symb1`symb2"
  # parse: {"symb1", "`", "symb2"}
  FullForm: symb1`symb2
  arity:
  affix:
  associativity: null
  meaningful: true
  # comments: Functions as a decimal point: either contextpath1 or contextpath2 may be empty, but not both at the same time.

ContourIntegral:
  actual-precedence: 420
  Precedence-Function: 670
  precedence: 325
  WolframLanguageData:
  WolframLanguageData-corrected: 45
  UnicodeCharacters.tr: 455
  UnicodeCharacters-corrected.tr: 445
  # N-tokens: {"∮"}
  # L-tokens: {}
  # O-tokens: {""}
  usage: "∮ f(x) x"
  # parse: {"ContourIntegral", "[", "expr1", ",", "expr2", "]"}
  FullForm: Integrate[expr1, expr2]
  arity: Binary
  affix: Compound
  associativity: right
  meaningful: true
  # comments: Usage and Parse may not be correct.

Coproduct:
  actual-precedence: 460
  precedence: 360
  WolframLanguageData: 42
  WolframLanguageData-corrected: 42
  UnicodeCharacters.tr: 500
  UnicodeCharacters-corrected.tr: 500
  # N-tokens: {}
  # L-tokens: {"∐"}
  # O-tokens: {}
  usage: "expr1 ∐ expr2"
  # parse: {"Coproduct", "[", "expr1", ",", "expr2", "]"}
  FullForm: Coproduct[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

CornerBracket:
  actual-precedence: -10
  Precedence-Function: 670
  precedence: 760
  WolframLanguageData:
  WolframLanguageData-corrected: 1
  UnicodeCharacters.tr: -10
  UnicodeCharacters-corrected.tr: -10
  # N-tokens: {"「"}
  # L-tokens: {}
  # O-tokens: {"」"}
  usage: "「expr」"
  # parse:
  FullForm:
  arity: Unary
  affix: Matchfix
  associativity: null
  meaningful: true
  # comments:

CounterClockwiseContourIntegral:
  actual-precedence: 420
  Precedence-Function: 670
  precedence: 325
  WolframLanguageData:
  WolframLanguageData-corrected: 45
  UnicodeCharacters.tr: 455
  UnicodeCharacters-corrected.tr: 445
  # N-tokens: {"∳"}
  # L-tokens: {}
  # O-tokens: {""}
  usage: "∳ f(x)  x"
  # parse: {"CounterClockwiseContourIntegral", "[", "expr1", ",", "expr2", "]"}
  FullForm: Integrate[expr1, expr2]
  arity: Binary
  affix: Compound
  associativity: right
  meaningful: true
  # comments: Usage and Parse may not be correct.

Cross:
  actual-precedence: 640
  precedence: 500
  WolframLanguageData: 28
  WolframLanguageData-corrected: 28
  UnicodeCharacters.tr: 603
  UnicodeCharacters-corrected.tr: 606
  # N-tokens: {}
  # L-tokens: {""}
  # O-tokens: {}
  usage: "expr1  expr2"
  # parse: {"Cross", "[", "expr1", ",", "expr2", "]"}
  FullForm: Cross[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: true
  # comments:

Cup:
  actual-precedence: 440
  precedence: 340
  WolframLanguageData: 43
  WolframLanguageData-corrected: 43
  UnicodeCharacters.tr: 460
  UnicodeCharacters-corrected.tr: 460
  # N-tokens: {}
  # L-tokens: {"⌣"}
  # O-tokens: {}
  usage: "expr1 ⌣ expr2"
  # parse: {"Cup", "[", "expr1", ",", "expr2", "]"}
  FullForm: Cup[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

CupCap:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"≍"}
  # O-tokens: {}
  usage: "x ≍ y"
  # parse: {"CupCap", "[", "x", ",", "y", "]"}
  FullForm: CupCap[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

Curl:
  actual-precedence: 590
  Precedence-Function: 670
  precedence: 485
  WolframLanguageData:
  WolframLanguageData-corrected: 29.8
  UnicodeCharacters.tr: 601
  UnicodeCharacters-corrected.tr: 601
  # N-tokens: {""}
  # L-tokens: {}
  # O-tokens: {}
  usage: "expr"
  # parse: {"Curl", "[", "expr", "]"}
  FullForm:
  arity: Unary
  affix: Prefix
  associativity: right
  meaningful: true
  # comments: Usage and Parse may not be correct.

CurlyDoubleQuote:
  actual-precedence: -10
  Precedence-Function: 670
  precedence: 760
  WolframLanguageData:
  WolframLanguageData-corrected: 1
  UnicodeCharacters.tr: -10
  UnicodeCharacters-corrected.tr: -10
  # N-tokens: {"“"}
  # L-tokens: {}
  # O-tokens: {"”"}
  usage: "“expr”"
  # parse: {"CurlyDoubleQuote","[","expr","]"}
  FullForm: CurlyDoubleQuote[expr]
  arity: Unary
  affix: Matchfix
  associativity: null
  meaningful: false
  # comments:

CurlyQuote:
  actual-precedence: -10
  Precedence-Function: 670
  precedence: 760
  WolframLanguageData:
  WolframLanguageData-corrected: 1
  UnicodeCharacters.tr: -10
  UnicodeCharacters-corrected.tr: -10
  # N-tokens: {"‘"}
  # L-tokens: {}
  # O-tokens: {"’"}
  usage: "‘expr’"
  # parse: {"CurlyQuote","[","expr","]"}
  FullForm: CurlyQuote[expr]
  arity: Unary
  affix: Matchfix
  associativity: null
  meaningful: false
  # comments:

Decrement:
  actual-precedence: 880
  Precedence-Function: 660
  precedence: 665
  WolframLanguageData: 11
  WolframLanguageData-corrected: 11
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 760
  # N-tokens: {}
  # L-tokens: {"--"}
  # O-tokens: {}
  usage: "expr--"
  # parse: {"Decrement", "[", "expr", "]"}
  FullForm: Decrement[expr]
  arity: Unary
  affix: Postfix
  associativity: left
  meaningful: true
  # comments:

Del:
  actual-precedence: 710
  precedence: 550
  WolframLanguageData: 24
  WolframLanguageData-corrected: 24
  UnicodeCharacters.tr: 620
  UnicodeCharacters-corrected.tr: 620
  # N-tokens: {"∇"}
  # L-tokens: {}
  # O-tokens: {}
  usage: "∇x"
  # parse: {"Del", "[", "expr", "]"}
  FullForm: Del[expr]
  arity: Unary
  affix: Prefix
  associativity: right
  meaningful: false
  # comments:

Derivative:
  actual-precedence: 770
  precedence: 670
  WolframLanguageData: 19
  WolframLanguageData-corrected: 19
  UnicodeCharacters.tr: None
  UnicodeCharacters-corrected.tr: 680
  # N-tokens: None
  # L-tokens: None
  # O-tokens: None
  usage: "None"
  # parse: None
  FullForm: None
  arity: Unary
  affix: Postfix
  associativity: left
  meaningful: true
  # comments: None

Diamond:
  actual-precedence: 550
  precedence: 450
  WolframLanguageData: 33
  WolframLanguageData-corrected: 33
  UnicodeCharacters.tr: 570
  UnicodeCharacters-corrected.tr: 570
  # N-tokens: {}
  # L-tokens: {"⋄"}
  # O-tokens: {}
  usage: "expr1 ⋄ expr2"
  # parse: {"Diamond", "[", "expr1", ",", "expr2", "]"}
  FullForm: Diamond[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

DifferenceDelta:
  actual-precedence: 710
  precedence: 550
  WolframLanguageData: 24
  WolframLanguageData-corrected: 24
  UnicodeCharacters.tr: 620
  UnicodeCharacters-corrected.tr: 620
  # N-tokens: {""}
  # L-tokens: {}
  # O-tokens: {}
  usage: "expr"
  # parse: {"DifferenceDelta", "[", "expr", "]"}
  FullForm:
  arity: Unary
  affix: Prefix
  associativity: right
  meaningful: true
  # comments: Usage and Parse may not be correct.

DifferentialD:
  actual-precedence: 720
  Precedence-Function: 550
  precedence: 560
  WolframLanguageData:
  WolframLanguageData-corrected: 23
  UnicodeCharacters.tr: 630
  UnicodeCharacters-corrected.tr: 630
  # N-tokens: {""}
  # L-tokens: {}
  # O-tokens: {}
  usage: "x"
  # parse: {"DifferentialD", "[", "x", "]"}
  FullForm: DifferentialD[x]
  arity: Unary
  affix: Prefix
  associativity: right
  meaningful: false
  # comments:

DirectedEdge:
  actual-precedence: 370
  precedence: 295
  WolframLanguageData:
  WolframLanguageData-corrected: 49
  UnicodeCharacters.tr: 395
  UnicodeCharacters-corrected.tr: 395
  # N-tokens: {}
  # L-tokens: {""}
  # O-tokens: {}
  usage: "u  v"
  # parse: {"DirectedEdge", "[", "u", ",", "v", "]"}
  FullForm: DirectedEdge[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: true
  # comments:

DiscreteRatio:
  actual-precedence: 710
  precedence: 550
  WolframLanguageData: 24
  WolframLanguageData-corrected: 24
  UnicodeCharacters.tr: 620
  UnicodeCharacters-corrected.tr: 620
  # N-tokens: {""}
  # L-tokens: {}
  # O-tokens: {}
  usage: "f  i"
  # parse: {"DiscreteRatio", "[", "f", "i", "]"}
  FullForm:
  arity: Unary
  affix: Prefix
  associativity: right
  meaningful: true
  # comments: Usage and Parse may not be correct.

DiscreteShift:
  actual-precedence: 710
  precedence: 550
  WolframLanguageData: 24
  WolframLanguageData-corrected: 24
  UnicodeCharacters.tr: 620
  UnicodeCharacters-corrected.tr: 620
  # N-tokens: {""}
  # L-tokens: {}
  # O-tokens: {}
  usage: "expr"
  # parse: {"DiscreteShift", "[", "expr", "]"}
  FullForm:
  arity: Unary
  affix: Prefix
  associativity: right
  meaningful: true
  # comments: Usage and Parse may not be correct.

Distributed:
  actual-precedence: 320
  precedence: 250
  WolframLanguageData:
  WolframLanguageData-corrected: 52
  UnicodeCharacters.tr: 360
  UnicodeCharacters-corrected.tr: 360
  # N-tokens: {}
  # L-tokens: {""}
  # O-tokens: {}
  usage: "expr1  expr2"
  # parse: {"Distributed", "[", "expr1", ",", "expr2", "]"}
  FullForm: Distributed[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: true
  # comments:

Divergence:
  actual-precedence: 590
  Precedence-Function: 550
  precedence: 485
  WolframLanguageData:
  WolframLanguageData-corrected: 29.8
  UnicodeCharacters.tr: 601
  UnicodeCharacters-corrected.tr: 601
  # N-tokens: {""}
  # L-tokens: {}
  # O-tokens: {}
  usage: "expr"
  # parse: {"Divergence", "[", "expr", "]"}
  FullForm:
  arity: Unary
  affix: Prefix
  associativity: right
  meaningful: true
  # comments: Usage and Parse may not be correct.

Divide:
  actual-precedence: 570
  precedence: 470
  WolframLanguageData: 31
  WolframLanguageData-corrected: 31
  UnicodeCharacters.tr: 590
  UnicodeCharacters-corrected.tr: 590
  # N-tokens: {}
  # L-tokens: {"/", "÷", "∕"}
  # O-tokens: {}
  usage: "expr1 / expr2; expr1 ÷ expr2"
  # parse: {"Divide", "[", "expr1", ",", "expr2", "]"}
  FullForm: Times[expr1, Power[expr2, -1]]
  arity: Binary
  affix: Infix
  associativity: left
  meaningful: true
  # comments:

DivideBy:
  actual-precedence: 120
  precedence: 100
  WolframLanguageData: 69
  WolframLanguageData-corrected: 69
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 230
  # N-tokens: {}
  # L-tokens: {"/="}
  # O-tokens: {}
  usage: "expr1 /= expr2"
  # parse: {"DivideBy", "[", "expr1", ",", "expr2", "]"}
  FullForm: DivideBy[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: right
  meaningful: true
  # comments:

Divides:
  actual-precedence: 570
  Precedence-Function: 670
  precedence: 470
  WolframLanguageData:
  WolframLanguageData-corrected: 31
  UnicodeCharacters.tr: 590
  UnicodeCharacters-corrected.tr: 590
  # N-tokens: {}
  # L-tokens: {"∣"}
  # O-tokens: {}
  usage: "expr1 ∣ expr2"
  # parse: {"Divides", "[", "expr1", ",", "expr2", "]"}
  FullForm: Divisible[expr2, expr1]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: true
  # comments:

Dot:
  actual-precedence: 630
  precedence: 490
  WolframLanguageData: 29
  WolframLanguageData-corrected: 29
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 605
  # N-tokens: {}
  # L-tokens: {"."}
  # O-tokens: {}
  usage: "expr1 . expr2"
  # parse: {"Dot", "[", "expr1", ",", "expr2", "]"}
  FullForm: Dot[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: true
  # comments:

DotEqual:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"≐"}
  # O-tokens: {}
  usage: "x ≐ y"
  # parse: {"DotEqual", "[", "x", ",", "y", "]"}
  FullForm: DotEqual[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

DoubleAngleBracket:
  actual-precedence: -10
  Precedence-Function: 670
  precedence: 760
  WolframLanguageData:
  WolframLanguageData-corrected: 1
  UnicodeCharacters.tr: -10
  UnicodeCharacters-corrected.tr: -10
  # N-tokens: {"《"}
  # L-tokens: {}
  # O-tokens: {"》"}
  usage: "《expr》"
  # parse:
  FullForm:
  arity: Unary
  affix: Matchfix
  associativity: null
  meaningful: true
  # comments:

DoubleBracketingBar:
  actual-precedence: -10
  Precedence-Function: 670
  precedence: 760
  WolframLanguageData-corrected: 1
  UnicodeCharacters.tr: -10
  UnicodeCharacters-corrected.tr: -10
  # N-tokens: {""}
  # L-tokens: {}
  # O-tokens: {""}
  usage: "expr"
  # parse: {"DoubleBracketingBar", "[", "expr", ",", "…", "]"}
  # FullForm: "DoubleBracketingBar[expr, \[Ellipsis]]"
  arity: n-ary
  affix: Matchfix
  associativity: null
  meaningful: false
  # comments:

DoubleContourIntegral:
  actual-precedence: 420
  Precedence-Function: 670
  precedence: 325
  WolframLanguageData:
  WolframLanguageData-corrected: 45
  UnicodeCharacters.tr: 455
  UnicodeCharacters-corrected.tr: 445
  # N-tokens: {"∯"}
  # L-tokens: {}
  # O-tokens: {""}
  usage: "∯ f(x) x"
  # parse: {"DoubleContourIntegral", "[", "expr1", ",", "expr2", "]"}
  FullForm: Integrate[expr1, expr2]
  arity: Binary
  affix: Compound
  associativity: right
  meaningful: true
  # comments: Usage and Parse may not be correct.

DoubleDownArrow:
  actual-precedence: 740
  precedence: 580
  WolframLanguageData:
  WolframLanguageData-corrected: 21.5
  UnicodeCharacters.tr: 650
  UnicodeCharacters-corrected.tr: 650
  # N-tokens: {}
  # L-tokens: {"⇓"}
  # O-tokens: {}
  usage: "x ⇓ y"
  # parse: {"DoubleDownArrow", "[", "x", ",", "y", "]"}
  FullForm: DoubleDownArrow[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

DoubleLeftArrow:
  actual-precedence: 340
  precedence: 270
  WolframLanguageData:
  WolframLanguageData-corrected: 50.6
  UnicodeCharacters.tr: 380
  UnicodeCharacters-corrected.tr: 380
  # N-tokens: {}
  # L-tokens: {"⇐"}
  # O-tokens: {}
  usage: "x ⇐ y"
  # parse: {"DoubleLeftArrow", "[", "x", ",", "y", "]"}
  FullForm: DoubleLeftArrow[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

DoubleLeftRightArrow:
  actual-precedence: 340
  precedence: 270
  WolframLanguageData:
  WolframLanguageData-corrected: 50.6
  UnicodeCharacters.tr: 380
  UnicodeCharacters-corrected.tr: 380
  # N-tokens: {}
  # L-tokens: {"⇔"}
  # O-tokens: {}
  usage: "x ⇔ y"
  # parse: {"DoubleLeftRightArrow", "[", "x", ",", "y", "]"}
  FullForm: DoubleLeftRightArrow[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

DoubleLeftTee:
  actual-precedence: 220
  precedence: 190
  WolframLanguageData: 60
  WolframLanguageData-corrected: 60
  UnicodeCharacters.tr: 300
  UnicodeCharacters-corrected.tr: 300
  # N-tokens: {}
  # L-tokens: {"⫤"}
  # O-tokens: {}
  usage: "expr1 ⫤ expr2"
  # parse: {"DoubleLeftTee", "[", "expr1", ",", "expr2", "]"}
  FullForm: DoubleLeftTee[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: left
  meaningful: false
  # comments:

DoubleLongLeftArrow:
  actual-precedence: 740
  precedence: 580
  WolframLanguageData:
  WolframLanguageData-corrected: 21.5
  UnicodeCharacters.tr: 650
  UnicodeCharacters-corrected.tr: 650
  # N-tokens: {}
  # L-tokens: {"⟸"}
  # O-tokens: {}
  usage: "x ⟸ y"
  # parse: {"DoubleLongLeftArrow", "[", "x", ",", "y", "]"}
  FullForm: DoubleLongLeftArrow[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

DoubleLongLeftRightArrow:
  actual-precedence: 740
  precedence: 580
  WolframLanguageData:
  WolframLanguageData-corrected: 21.5
  UnicodeCharacters.tr: 650
  UnicodeCharacters-corrected.tr: 650
  # N-tokens: {}
  # L-tokens: {"⟺"}
  # O-tokens: {}
  usage: "x ⟺ y"
  # parse: {"DoubleLongLeftRightArrow", "[", "x", ",", "y", "]"}
  FullForm: DoubleLongLeftRightArrow[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

DoubleLongRightArrow:
  actual-precedence: 740
  precedence: 580
  WolframLanguageData:
  WolframLanguageData-corrected: 21.5
  UnicodeCharacters.tr: 650
  UnicodeCharacters-corrected.tr: 650
  # N-tokens: {}
  # L-tokens: {"⟹"}
  # O-tokens: {}
  usage: "x ⟹ y"
  # parse: {"DoubleLongRightArrow", "[", "x", ",", "y", "]"}
  FullForm: DoubleLongRightArrow[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

DoubleRightArrow:
  actual-precedence: 340
  precedence: 270
  WolframLanguageData:
  WolframLanguageData-corrected: 50.6
  UnicodeCharacters.tr: 380
  UnicodeCharacters-corrected.tr: 380
  # N-tokens: {}
  # L-tokens: {"⇒"}
  # O-tokens: {}
  usage: "x ⇒ y"
  # parse: {"DoubleRightArrow", "[", "x", ",", "y", "]"}
  FullForm: DoubleRightArrow[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

DoubleRightTee:
  actual-precedence: 230
  precedence: 190
  WolframLanguageData:
  WolframLanguageData-corrected: 59.6
  UnicodeCharacters.tr: 300
  UnicodeCharacters-corrected.tr: 300
  # N-tokens: {}
  # L-tokens: {"⊨"}
  # O-tokens: {}
  usage: "expr1 ⊨ expr2"
  # parse: {"DoubleRightTee", "[", "expr1", ",", "expr2", "]"}
  FullForm: DoubleRightTee[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: right
  meaningful: false
  # comments:

DoubleUpArrow:
  actual-precedence: 740
  precedence: 580
  WolframLanguageData:
  WolframLanguageData-corrected: 21.5
  UnicodeCharacters.tr: 650
  UnicodeCharacters-corrected.tr: 650
  # N-tokens: {}
  # L-tokens: {"⇑"}
  # O-tokens: {}
  usage: "x ⇑ y"
  # parse: {"DoubleUpArrow", "[", "x", ",", "y", "]"}
  FullForm: DoubleUpArrow[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

DoubleUpDownArrow:
  actual-precedence: 740
  precedence: 580
  WolframLanguageData:
  WolframLanguageData-corrected: 21.5
  UnicodeCharacters.tr: 650
  UnicodeCharacters-corrected.tr: 650
  # N-tokens: {}
  # L-tokens: {"⇕"}
  # O-tokens: {}
  usage: "x ⇕ y"
  # parse: {"DoubleUpDownArrow", "[", "x", ",", "y", "]"}
  FullForm: DoubleUpDownArrow[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

DoubleVerticalBar:
  actual-precedence: 350
  precedence: 280
  WolframLanguageData: 50
  WolframLanguageData-corrected: 50.5
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 385
  # N-tokens: {}
  # L-tokens: {"∥"}
  # O-tokens: {}
  usage: "expr1 ∥ expr2"
  # parse: {"DoubleVerticalBar", "[", "expr1", ",", "expr2", "]"}
  FullForm: DoubleVerticalBar[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

DownArrow:
  actual-precedence: 740
  precedence: 580
  WolframLanguageData:
  WolframLanguageData-corrected: 21.5
  UnicodeCharacters.tr: 650
  UnicodeCharacters-corrected.tr: 650
  # N-tokens: {}
  # L-tokens: {"↓"}
  # O-tokens: {}
  usage: "x ↓ y"
  # parse: {"DownArrow", "[", "x", ",", "y", "]"}
  FullForm: DownArrow[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

DownArrowBar:
  actual-precedence: 740
  precedence: 580
  WolframLanguageData:
  WolframLanguageData-corrected: 21.5
  UnicodeCharacters.tr: 650
  UnicodeCharacters-corrected.tr: 650
  # N-tokens: {}
  # L-tokens: {"⤓"}
  # O-tokens: {}
  usage: "x ⤓ y"
  # parse: {"DownArrowBar", "[", "x", ",", "y", "]"}
  FullForm: DownArrowBar[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

DownArrowUpArrow:
  actual-precedence: 740
  precedence: 580
  WolframLanguageData:
  WolframLanguageData-corrected: 21.5
  UnicodeCharacters.tr: 650
  UnicodeCharacters-corrected.tr: 650
  # N-tokens: {}
  # L-tokens: {"⇵"}
  # O-tokens: {}
  usage: "x ⇵ y"
  # parse: {"DownArrowUpArrow", "[", "x", ",", "y", "]"}
  FullForm: DownArrowUpArrow[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

DownLeftRightVector:
  actual-precedence: 340
  precedence: 270
  WolframLanguageData:
  WolframLanguageData-corrected: 50.6
  UnicodeCharacters.tr: 380
  UnicodeCharacters-corrected.tr: 380
  # N-tokens: {}
  # L-tokens: {"⥐"}
  # O-tokens: {}
  usage: "x ⥐ y"
  # parse: {"DownLeftRightVector", "[", "x", ",", "y", "]"}
  FullForm: DownLeftRightVector[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

DownLeftTeeVector:
  actual-precedence: 340
  precedence: 270
  WolframLanguageData:
  WolframLanguageData-corrected: 50.6
  UnicodeCharacters.tr: 380
  UnicodeCharacters-corrected.tr: 380
  # N-tokens: {}
  # L-tokens: {"⥞"}
  # O-tokens: {}
  usage: "x ⥞ y"
  # parse: {"DownLeftTeeVector", "[", "x", ",", "y", "]"}
  FullForm: DownLeftTeeVector[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

DownLeftVector:
  actual-precedence: 340
  precedence: 270
  WolframLanguageData:
  WolframLanguageData-corrected: 50.6
  UnicodeCharacters.tr: 380
  UnicodeCharacters-corrected.tr: 380
  # N-tokens: {}
  # L-tokens: {"↽"}
  # O-tokens: {}
  usage: "x ↽ y"
  # parse: {"DownLeftVector", "[", "x", ",", "y", "]"}
  FullForm: DownLeftVector[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

DownLeftVectorBar:
  actual-precedence: 340
  precedence: 270
  WolframLanguageData:
  WolframLanguageData-corrected: 50.6
  UnicodeCharacters.tr: 380
  UnicodeCharacters-corrected.tr: 380
  # N-tokens: {}
  # L-tokens: {"⥖"}
  # O-tokens: {}
  usage: "x ⥖ y"
  # parse: {"DownLeftVectorBar", "[", "x", ",", "y", "]"}
  FullForm: DownLeftVectorBar[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

DownRightTeeVector:
  actual-precedence: 340
  precedence: 270
  WolframLanguageData:
  WolframLanguageData-corrected: 50.6
  UnicodeCharacters.tr: 380
  UnicodeCharacters-corrected.tr: 380
  # N-tokens: {}
  # L-tokens: {"⥟"}
  # O-tokens: {}
  usage: "x ⥟ y"
  # parse: {"DownRightTeeVector", "[", "x", ",", "y", "]"}
  FullForm: DownRightTeeVector[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

DownRightVector:
  actual-precedence: 340
  precedence: 270
  WolframLanguageData:
  WolframLanguageData-corrected: 50.6
  UnicodeCharacters.tr: 380
  UnicodeCharacters-corrected.tr: 380
  # N-tokens: {}
  # L-tokens: {"⇁"}
  # O-tokens: {}
  usage: "x ⇁ y"
  # parse: {"DownRightVector", "[", "x", ",", "y", "]"}
  FullForm: DownRightVector[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

DownRightVectorBar:
  actual-precedence: 340
  precedence: 270
  WolframLanguageData:
  WolframLanguageData-corrected: 50.6
  UnicodeCharacters.tr: 380
  UnicodeCharacters-corrected.tr: 380
  # N-tokens: {}
  # L-tokens: {"⥗"}
  # O-tokens: {}
  usage: "x ⥗ y"
  # parse: {"DownRightVectorBar", "[", "x", ",", "y", "]"}
  FullForm: DownRightVectorBar[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

DownTee:
  actual-precedence: 220
  precedence: 190
  WolframLanguageData: 60
  WolframLanguageData-corrected: 60
  UnicodeCharacters.tr: 300
  UnicodeCharacters-corrected.tr: 300
  # N-tokens: {}
  # L-tokens: {"⊤"}
  # O-tokens: {}
  usage: "expr1 ⊤ expr2"
  # parse: {"DownTee", "[", "expr1", ",", "expr2", "]"}
  FullForm: DownTee[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: left
  meaningful: false
  # comments:

DownTeeArrow:
  actual-precedence: 740
  precedence: 580
  WolframLanguageData:
  WolframLanguageData-corrected: 21.5
  UnicodeCharacters.tr: 650
  UnicodeCharacters-corrected.tr: 650
  # N-tokens: {}
  # L-tokens: {"↧"}
  # O-tokens: {}
  usage: "x ↧ y"
  # parse: {"DownTeeArrow", "[", "x", ",", "y", "]"}
  FullForm: DownTeeArrow[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

Element:
  actual-precedence: 320
  precedence: 250
  WolframLanguageData: 52
  WolframLanguageData-corrected: 52
  UnicodeCharacters.tr: 360
  UnicodeCharacters-corrected.tr: 360
  # N-tokens: {}
  # L-tokens: {"∈"}
  # O-tokens: {}
  usage: "expr1 ∈ expr2"
  # parse: {"Element", "[", "expr1", ",", "expr2", "]"}
  FullForm: Element[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: true
  # comments:

Equal:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData: 50
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"==", "", ""}
  # O-tokens: {}
  usage: "expr1 == expr2; expr1  expr2;  expr1  expr2"
  # parse: {"Equal", "[", "expr1", ",", "expr2", "]"}
  FullForm: Equal[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: true
  # comments:

EqualTilde:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"≂"}
  # O-tokens: {}
  usage: "expr1≂ expr2"
  # parse: {"EqualTilde", "[", "x", ",", "y", "]"}
  FullForm: EqualTilde[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

Equilibrium:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"⇌"}
  # O-tokens: {}
  usage: "x ⇌ y"
  # parse: {"Equilibrium", "[", "x", ",", "y", "]"}
  FullForm: Equilibrium[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

Equivalent:
  actual-precedence: 260
  precedence: 205
  WolframLanguageData: 58
  WolframLanguageData-corrected: 58
  UnicodeCharacters.tr: 315
  UnicodeCharacters-corrected.tr: 315
  # N-tokens: {}
  # L-tokens: {"⧦"}
  # O-tokens: {}
  usage: "expr1 ⧦ expr2"
  # parse: {"Equivalent", "[", "expr1", ",", "expr2", "]"}
  FullForm: Equivalent[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: true
  # comments:

Exists:
  actual-precedence: 310
  precedence: 240
  WolframLanguageData: 53
  WolframLanguageData-corrected: 53
  UnicodeCharacters.tr: 350
  UnicodeCharacters-corrected.tr: 350
  # N-tokens: {"∃"}
  # L-tokens: {}
  # O-tokens: {}
  usage: "∃ expr"
  # parse: {"Exists", "[", "expr", "]"}
  arity: Unary
  affix: Prefix
  associativity: right
  meaningful: true
  # comments: Usage and Parse may not be correct.

ExpectationE:
  actual-precedence: 420
  precedence: 325
  WolframLanguageData-corrected: 45
  UnicodeCharacters.tr: 455
  UnicodeCharacters-corrected.tr: 445
  # N-tokens: {""}
  # L-tokens: {}
  # O-tokens: {}
  usage: "{{"", "expr"}}"
  # parse: {"ExpectationE", "[", "expr", "]"}
  arity: Unary
  affix: Prefix
  associativity: right
  meaningful: true
  # comments: Usage and Parse may not be correct.

Factorial:
  actual-precedence: 790
  precedence: 610
  WolframLanguageData: 17
  WolframLanguageData-corrected: 17
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 700
  # N-tokens: {}
  # L-tokens: {"!"}
  # O-tokens: {}
  usage: "{{"expr", "!"}}"
  # parse: {"Factorial", "[", "expr", "]"}
  FullForm: Factorial[expr]
  arity: Unary
  affix: Postfix
  associativity: left
  meaningful: true
  # comments:

Factorial2:
  actual-precedence: 790
  precedence: 610
  WolframLanguageData: 17
  WolframLanguageData-corrected: 17
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 700
  # N-tokens: {}
  # L-tokens: {"!!"}
  # O-tokens: {}
  usage: "{{"expr", "!!"}}"
  # parse: {"Factorial2", "[", "expr", "]"}
  FullForm: Factorial2[expr]
  arity: Unary
  affix: Postfix
  associativity: left
  meaningful: true
  # comments:

Floor:
  actual-precedence: -10
  Precedence-Function: 670
  precedence: 760
  WolframLanguageData:
  WolframLanguageData-corrected: 1
  UnicodeCharacters.tr: -10
  UnicodeCharacters-corrected.tr: -10
  # N-tokens: {"⌊"}
  # L-tokens: {}
  # O-tokens: {"⌋"}
  usage: "⌊ expr ⌋"
  # parse: {"Floor", "[", "expr", "]"}
  FullForm: Floor[expr]
  arity: Unary
  affix: Matchfix
  associativity: null
  meaningful: true
  # comments:

ForAll:
  actual-precedence: 310
  precedence: 240
  WolframLanguageData: 53
  WolframLanguageData-corrected: 53
  UnicodeCharacters.tr: 350
  UnicodeCharacters-corrected.tr: 350
  # N-tokens: {"∀"}
  # L-tokens: {}
  # O-tokens: {}
  usage: "∀ expr"
  # parse: {"ForAll", "[", "expr", "]"}
  arity: Unary
  affix: Prefix
  associativity: right
  meaningful: true
  # comments: Usage and Parse may not be correct.

FormBox:
  actual-precedence: 20
  Precedence-Function: 670
  precedence: 5
  WolframLanguageData: 78
  WolframLanguageData-corrected: 78
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 160
  # N-tokens: {}
  # L-tokens: {"\\`"}
  # O-tokens: {}
  usage: "expr1 \\ expr2"
  # parse: {"FormBox", "[", "expr2", ",", "expr1", "]"}
  arity: Binary
  affix: Infix
  associativity: missing["unknown"]
  meaningful: true
  # comments:

FractionBox:
  actual-precedence: 570
  Precedence-Function: 670
  precedence: 470
  WolframLanguageData:
  WolframLanguageData-corrected: 31
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 590
  # N-tokens: {}
  # L-tokens: {"\/"}
  # O-tokens: {}
  usage: "\( expr1 \/  expr2 \)"
  # parse: {"FractionBox", "[", "expr1", ",", "expr2", "]"}
  arity: Binary
  affix: Infix
  associativity: left
  meaningful: true
  # comments:

FullwidthAngleBracket:
  actual-precedence: -10
  Precedence-Function: 670
  precedence: 760
  WolframLanguageData:
  WolframLanguageData-corrected: 1
  UnicodeCharacters.tr: -10
  UnicodeCharacters-corrected.tr: -10
  # N-tokens: {"〈"}
  # L-tokens: {}
  # O-tokens: {"〉"}
  usage: "〈 expr 〉"
  # parse:
  arity: Unary
  affix: Matchfix
  associativity: null
  meaningful: true
  # comments:

FullwidthCurlyBracket:
  actual-precedence: -10
  Precedence-Function: 670
  precedence: 760
  WolframLanguageData:
  WolframLanguageData-corrected: 1
  UnicodeCharacters.tr: -10
  UnicodeCharacters-corrected.tr: -10
  # N-tokens: {"｛"}
  # L-tokens: {}
  # O-tokens: {"｝"}
  usage: "｛ expr ｝"
  # parse:
  arity: Unary
  affix: Matchfix
  associativity: null
  meaningful: true
  # comments:

FullwidthParenthesis:
  actual-precedence: -10
  Precedence-Function: 670
  precedence: 760
  WolframLanguageData:
  WolframLanguageData-corrected: 1
  UnicodeCharacters.tr: -10
  UnicodeCharacters-corrected.tr: -10
  # N-tokens: {"（"}
  # L-tokens: {}
  # O-tokens: {"）"}
  usage: "（ expr ）"
  # parse:
  arity: Unary
  affix: Matchfix
  associativity: null
  meaningful: true
  # comments:

FullwidthSquareBracket:
  actual-precedence: -10
  Precedence-Function: 670
  precedence: 760
  WolframLanguageData:
  WolframLanguageData-corrected: 1
  UnicodeCharacters.tr: -10
  UnicodeCharacters-corrected.tr: -10
  # N-tokens: {"［"}
  # L-tokens: {}
  # O-tokens: {"］"}
  usage: "［ expr ］"
  # parse:
  arity: Unary
  affix: Matchfix
  associativity: null
  meaningful: true
  # comments:

Function:
  actual-precedence: 110
  precedence: 90
  WolframLanguageData: 70
  WolframLanguageData-corrected: 70
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 220
  # N-tokens: {}
  # L-tokens: {"&"}
  # O-tokens: {}
  usage: "{{"expr", "&"}}"
  # parse: {"Function", "[", "expr", "]"}
  FullForm: Function[expr]
  arity: Unary
  affix: Postfix
  associativity: left
  meaningful: true
  # comments:

FunctionApply:
  actual-precedence: 890
  precedence: 670
  WolframLanguageData:
  WolframLanguageData-corrected: 10
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 761
  # N-tokens: {}
  # L-tokens: {"["}
  # O-tokens: {"]"}
  usage: "expr1", "[ expr2 ]"
  # parse: {"expr1", "[", "expr2", ",", "…", "]"}
  FullForm: expr1[expr2, \[Ellipsis]]
  arity: n-ary
  affix: Postfix
  associativity: left
  meaningful: true
  # comments:

FunctionApplyInfix:
  actual-precedence: 830
  precedence: 630
  WolframLanguageData:
  WolframLanguageData-corrected: 15
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 720
  # N-tokens: {}
  # L-tokens: {"~"}
  # O-tokens: {}
  usage: "expr1", "~", "expr2 ~ expr3"
  # parse: {"expr2", "[", "expr1", ",", "expr3", "]"}
  FullForm: expr2[expr1, expr3]
  arity: Ternary
  affix: Infix
  associativity: left
  meaningful: true
  # comments: Infix[f[x,y]] will display as x~f~y. Precedence identifies Infix with this operator, and Precedence[Infix]==30 which is almost correct.

FunctionApplyPostfix:
  actual-precedence: 90
  precedence: 70
  WolframLanguageData:
  WolframLanguageData-corrected: 72
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 204
  # N-tokens: {}
  # L-tokens: {"//"}
  # O-tokens: {}
  usage: "expr1 // expr2"
  # parse: {"expr2", "[", "expr1", "]"}
  FullForm: expr2[expr1]
  arity: Binary
  affix: Infix
  associativity: left
  meaningful: true
  # comments: Postfix[f[x]] will display as x//f. Precedence identifies Postfix with this operator.

FunctionApplyPrefix:
  actual-precedence: 840
  precedence: 640
  WolframLanguageData:
  WolframLanguageData-corrected: 14
  UnicodeCharacters.tr: 730
  UnicodeCharacters-corrected.tr: 730
  # N-tokens: {}
  # L-tokens: {"@", ""}
  # O-tokens: {}
  usage: "expr1", "@", "expr2"}, {"expr1  expr2"
  # parse: {"expr1", "[", "expr2", "]"}
  FullForm: expr1[expr2]
  arity: Binary
  affix: Infix
  associativity: right
  meaningful: true
  # comments: Operator Notations includes usages with invisible unicode characters.

Get:
  actual-precedence: 970
  precedence: 720
  WolframLanguageData: 6
  WolframLanguageData-corrected: 6
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 810
  # N-tokens: {"<<"}
  # L-tokens: {}
  # O-tokens: {}
  usage: "<< filename"
  # parse: {"Get", "[", "", "filename"}
  FullForm: Get["filename"]
  arity: Unary
  affix: Prefix
  associativity: right
  meaningful: true
  # comments:

Gradient:
  actual-precedence: 700
  Precedence-Function: 550
  precedence: 545
  WolframLanguageData:
  WolframLanguageData-corrected: 24
  UnicodeCharacters.tr: 615
  UnicodeCharacters-corrected.tr: 615
  # N-tokens: {""}
  # L-tokens: {}
  # O-tokens: {}
  usage: "{{"", "expr"}}"
  # parse: {"Gradient", "[", "expr", "]"}
  arity: Unary
  affix: Prefix
  associativity: right
  meaningful: true
  # comments: Usage and Parse may not be correct.

Greater:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData: 50
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {">"}
  # O-tokens: {}
  usage: "expr1 > expr2"
  # parse: {"Greater", "[", "expr1", ",", "expr2", "]"}
  FullForm: Greater[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: true
  # comments:

GreaterEqual:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData: 50
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {">=", "≥"}
  # O-tokens: {}
  usage: "expr1", ">=", "expr2"}, {"expr1 ≥ expr2"
  # parse: {"GreaterEqual", "[", "expr1", ",", "expr2", "]"}
  FullForm: GreaterEqual[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: true
  # comments:

GreaterEqualLess:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"⋛"}
  # O-tokens: {}
  usage: "x ⋛ y"
  # parse: {"GreaterEqualLess", "[", "x", ",", "y", "]"}
  FullForm: GreaterEqualLess[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

GreaterFullEqual:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"≧"}
  # O-tokens: {}
  usage: "x ≧ y"
  # parse: {"GreaterFullEqual", "[", "x", ",", "y", "]"}
  FullForm: GreaterFullEqual[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

GreaterGreater:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"≫"}
  # O-tokens: {}
  usage: "x ≫ y"
  # parse: {"GreaterGreater", "[", "x", ",", "y", "]"}
  FullForm: GreaterGreater[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

GreaterLess:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"≷"}
  # O-tokens: {}
  usage: "x ≷ y"
  # parse: {"GreaterLess", "[", "x", ",", "y", "]"}
  FullForm: GreaterLess[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

GreaterSlantEqual:
  actual-precedence: 360
  Precedence-Function: 670
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"⩾"}
  # O-tokens: {}
  usage: "x ⩾ y"
  # parse: {"GreaterEqual", "[", "x", ",", "y", "]"}
  FullForm: GreaterEqual[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

GreaterTilde:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"≳"}
  # O-tokens: {}
  usage: "x ≳ y"
  # parse: {"GreaterTilde", "[", "x", ",", "y", "]"}
  FullForm: GreaterTilde[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

HumpDownHump:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"≎"}
  # O-tokens: {}
  usage: "x ≎ y"
  # parse: {"HumpDownHump", "[", "x", ",", "y", "]"}
  FullForm: HumpDownHump[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

HumpEqual:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"≏"}
  # O-tokens: {}
  usage: "x ≏ y"
  # parse: {"HumpEqual", "[", "x", ",", "y", "]"}
  FullForm: HumpEqual[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

ImplicitSequence:
  actual-precedence: 10
  Precedence-Function: 670
  precedence: 755
  WolframLanguageData:
  WolframLanguageData-corrected: 79
  UnicodeCharacters.tr: 1
  UnicodeCharacters-corrected.tr: 1
  # N-tokens: {}
  # L-tokens: {"", ","}
  # O-tokens: {}
  usage: "expr1", "", "expr2"}, {"expr1 , expr2"
  # parse: {"AngleBracket", "[", "expr", ",", "…", "]"}
  FullForm: expr1, expr2
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: true
  # comments: Operator Notations includes usages with invisible unicode characters.

Implies:
  actual-precedence: 250
  precedence: 200
  WolframLanguageData: 59
  WolframLanguageData-corrected: 59
  UnicodeCharacters.tr: 310
  UnicodeCharacters-corrected.tr: 310
  # N-tokens: {}
  # L-tokens: {""}
  # O-tokens: {}
  usage: "expr1  expr2"
  # parse: {"Implies", "[", "expr1", ",", "expr2", "]"}
  FullForm: Implies[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: right
  meaningful: true
  # comments:

Increment:
  actual-precedence: 880
  Precedence-Function: 660
  precedence: 665
  WolframLanguageData: 11
  WolframLanguageData-corrected: 11
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 760
  # N-tokens: {}
  # L-tokens: {"++"}
  # O-tokens: {}
  usage: "expr++"
  # parse: {"Increment", "[", "expr", "]"}
  FullForm: Increment[expr]
  arity: Unary
  affix: Postfix
  associativity: left
  meaningful: true
  # comments:

Information:
  actual-precedence: 670
  precedence: 670
  WolframLanguageData: None
  WolframLanguageData-corrected: None
  UnicodeCharacters.tr: None
  UnicodeCharacters-corrected.tr: None
  # N-tokens: None
  # L-tokens: None
  # O-tokens: None
  usage: "None"
  # parse: None
  FullForm: None
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: true
  # comments: None

InlinePart:
  actual-precedence: 900
  Precedence-Function: 670
  precedence: 675
  WolframLanguageData:
  WolframLanguageData-corrected: 9.5
  UnicodeCharacters.tr: 763
  UnicodeCharacters-corrected.tr: 763
  # N-tokens: {}
  # L-tokens: {""}
  # O-tokens: {}
  usage: "expr1  expr2"
  # parse: {"InlinePart", "[", "expr1", ",", "expr2", "]"}
  FullForm: RowBox[List[expr1, InlinePart, expr2]]
  arity: Binary
  affix: Infix
  associativity: right
  meaningful: false
  # comments: "InlinePart or @> was an operator that was introduced in one of the pre-release/betas for version 10 and subsequently removed before public release. It was briefly available publicly in the Raspberry Pi version of Wolfram Language that co-existed with the pre-releases at the time. The operator allowed you to access elements of a list with an infix operator." https://mathematica.stackexchange.com/questions/134506/inlinepart-what-is-it-and-what-happened-to-it

Integrate:
  actual-precedence: 420
  precedence: 325
  WolframLanguageData: 23
  WolframLanguageData-corrected: 45
  UnicodeCharacters.tr: 455
  UnicodeCharacters-corrected.tr: 445
  # N-tokens: {"∫"}
  # L-tokens: {}
  # O-tokens: {""}
  usage: "∫", "expr1  expr2"
  # parse: {"Integrate", "[", "expr1", ",", "expr2", "]"}
  FullForm: Integrate[expr1, expr2]
  arity: Binary
  affix: Compound
  associativity: right
  meaningful: true
  # comments:

InterpretationBox:
  actual-precedence: 930
  Precedence-Function: 670
  precedence: 695
  WolframLanguageData:
  WolframLanguageData-corrected: 7.6
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 780
  # N-tokens: {"\*"}
  # L-tokens: {}
  # O-tokens: {}
  usage: "\( \*  expr \)"
  # parse:
  arity: Unary
  affix: Prefix
  associativity: right
  meaningful: true
  # comments:

InterpretedBox:
  actual-precedence: 670
  precedence: 670
  WolframLanguageData: None
  WolframLanguageData-corrected: None
  UnicodeCharacters.tr: None
  UnicodeCharacters-corrected.tr: None
  # N-tokens: None
  # L-tokens: None
  # O-tokens: None
  usage: "None"
  # parse: None
  FullForm: None
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: true
  # comments: None

Intersection:
  actual-precedence: 390
  precedence: 305
  WolframLanguageData: 47
  WolframLanguageData-corrected: 47
  UnicodeCharacters.tr: 420
  UnicodeCharacters-corrected.tr: 420
  # N-tokens: {}
  # L-tokens: {"⋂"}
  # O-tokens: {}
  usage: "expr1 ⋂ expr2"
  # parse: {"Intersection", "[", "expr1", ",", "expr2", "]"}
  FullForm: Intersection[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: true
  # comments:

InvisiblePostfixScriptBase:
  actual-precedence: 960
  Precedence-Function: 670
  precedence: 715
  WolframLanguageData:
  WolframLanguageData-corrected: 6.5
  UnicodeCharacters.tr: 800
  UnicodeCharacters-corrected.tr: 800
  # N-tokens: {}
  # L-tokens: {""}
  # O-tokens: {}
  usage: "{{"expr", ""}}"
  # parse: {"InvisiblePostfixScriptBase", "[", "expr", "]"}
  arity: Unary
  affix: Postfix
  associativity: left
  meaningful: false
  # comments: This operator is an invisible Unicode character and is used in the layout of displayed expressions.

InvisiblePrefixScriptBase:
  actual-precedence: 960
  Precedence-Function: 670
  precedence: 715
  WolframLanguageData:
  WolframLanguageData-corrected: 6.5
  UnicodeCharacters.tr: 800
  UnicodeCharacters-corrected.tr: 800
  # N-tokens: {""}
  # L-tokens: {}
  # O-tokens: {}
  usage: "{{"", "expr"}}"
  # parse: {"InvisiblePrefixScriptBase", "[", "expr", "]"}
  arity: Unary
  affix: Prefix
  associativity: right
  meaningful: false
  # comments: Usage and Parse may not be correct.

Laplacian:
  actual-precedence: 710
  Precedence-Function: 670
  precedence: 550
  WolframLanguageData:
  WolframLanguageData-corrected: 24
  UnicodeCharacters.tr: 620
  UnicodeCharacters-corrected.tr: 620
  # N-tokens: {"∆"}
  # L-tokens: {}
  # O-tokens: {}
  usage: "{{"∆", "expr"}}"
  # parse: {"Laplacian", "[", "expr", "]"}
  arity: Unary
  affix: Prefix
  associativity: right
  meaningful: true
  # comments: Usage and Parse may not be correct.

LeftArrow:
  actual-precedence: 340
  precedence: 270
  WolframLanguageData:
  WolframLanguageData-corrected: 50.6
  UnicodeCharacters.tr: 380
  UnicodeCharacters-corrected.tr: 380
  # N-tokens: {}
  # L-tokens: {"←"}
  # O-tokens: {}
  usage: "x ← y"
  # parse: {"LeftArrow", "[", "x", ",", "y", "]"}
  FullForm: LeftArrow[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

LeftArrowBar:
  actual-precedence: 340
  precedence: 270
  WolframLanguageData:
  WolframLanguageData-corrected: 50.6
  UnicodeCharacters.tr: 380
  UnicodeCharacters-corrected.tr: 380
  # N-tokens: {}
  # L-tokens: {"⇤"}
  # O-tokens: {}
  usage: "x ⇤ y"
  # parse: {"LeftArrowBar", "[", "x", ",", "y", "]"}
  FullForm: LeftArrowBar[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

LeftArrowRightArrow:
  actual-precedence: 340
  precedence: 270
  WolframLanguageData:
  WolframLanguageData-corrected: 50.6
  UnicodeCharacters.tr: 380
  UnicodeCharacters-corrected.tr: 380
  # N-tokens: {}
  # L-tokens: {"⇆"}
  # O-tokens: {}
  usage: "x ⇆ y"
  # parse: {"LeftArrowRightArrow", "[", "x", ",", "y", "]"}
  FullForm: LeftArrowRightArrow[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

LeftDownTeeVector:
  actual-precedence: 740
  precedence: 580
  WolframLanguageData:
  WolframLanguageData-corrected: 21.5
  UnicodeCharacters.tr: 650
  UnicodeCharacters-corrected.tr: 650
  # N-tokens: {}
  # L-tokens: {"⥡"}
  # O-tokens: {}
  usage: "x ⥡ y"
  # parse: {"LeftDownTeeVector", "[", "x", ",", "y", "]"}
  FullForm: LeftDownTeeVector[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

LeftDownVector:
  actual-precedence: 740
  precedence: 580
  WolframLanguageData:
  WolframLanguageData-corrected: 21.5
  UnicodeCharacters.tr: 650
  UnicodeCharacters-corrected.tr: 650
  # N-tokens: {}
  # L-tokens: {"⇃"}
  # O-tokens: {}
  usage: "x ⇃ y"
  # parse: {"LeftDownVector", "[", "x", ",", "y", "]"}
  FullForm: LeftDownVector[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

LeftDownVectorBar:
  actual-precedence: 740
  precedence: 580
  WolframLanguageData:
  WolframLanguageData-corrected: 21.5
  UnicodeCharacters.tr: 650
  UnicodeCharacters-corrected.tr: 650
  # N-tokens: {}
  # L-tokens: {"⥙"}
  # O-tokens: {}
  usage: "x ⥙ y"
  # parse: {"LeftDownVectorBar", "[", "x", ",", "y", "]"}
  FullForm: LeftDownVectorBar[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

LeftRightArrow:
  actual-precedence: 340
  precedence: 270
  WolframLanguageData:
  WolframLanguageData-corrected: 50.6
  UnicodeCharacters.tr: 380
  UnicodeCharacters-corrected.tr: 380
  # N-tokens: {}
  # L-tokens: {"↔"}
  # O-tokens: {}
  usage: "x ↔ y"
  # parse: {"LeftRightArrow", "[", "x", ",", "y", "]"}
  FullForm: LeftRightArrow[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

LeftRightVector:
  actual-precedence: 340
  precedence: 270
  WolframLanguageData:
  WolframLanguageData-corrected: 50.6
  UnicodeCharacters.tr: 380
  UnicodeCharacters-corrected.tr: 380
  # N-tokens: {}
  # L-tokens: {"⥎"}
  # O-tokens: {}
  usage: "x ⥎ y"
  # parse: {"LeftRightVector", "[", "x", ",", "y", "]"}
  FullForm: LeftRightVector[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

LeftTee:
  actual-precedence: 220
  precedence: 190
  WolframLanguageData: 60
  WolframLanguageData-corrected: 60
  UnicodeCharacters.tr: 300
  UnicodeCharacters-corrected.tr: 300
  # N-tokens: {}
  # L-tokens: {"⊣"}
  # O-tokens: {}
  usage: "expr1 ⊣ expr2"
  # parse: {"LeftTee", "[", "expr1", ",", "expr2", "]"}
  FullForm: LeftTee[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: left
  meaningful: false
  # comments:

LeftTeeArrow:
  actual-precedence: 340
  precedence: 270
  WolframLanguageData:
  WolframLanguageData-corrected: 50.6
  UnicodeCharacters.tr: 380
  UnicodeCharacters-corrected.tr: 380
  # N-tokens: {}
  # L-tokens: {"↤"}
  # O-tokens: {}
  usage: "x ↤ y"
  # parse: {"LeftTeeArrow", "[", "x", ",", "y", "]"}
  FullForm: LeftTeeArrow[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

LeftTeeVector:
  actual-precedence: 340
  precedence: 270
  WolframLanguageData:
  WolframLanguageData-corrected: 50.6
  UnicodeCharacters.tr: 380
  UnicodeCharacters-corrected.tr: 380
  # N-tokens: {}
  # L-tokens: {"⥚"}
  # O-tokens: {}
  usage: "x ⥚ y"
  # parse: {"LeftTeeVector", "[", "x", ",", "y", "]"}
  FullForm: LeftTeeVector[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

LeftTriangle:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"⊲"}
  # O-tokens: {}
  usage: "x ⊲ y"
  # parse: {"LeftTriangle", "[", "x", ",", "y", "]"}
  FullForm: LeftTriangle[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

LeftTriangleBar:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"⧏"}
  # O-tokens: {}
  usage: "x ⧏ y"
  # parse: {"LeftTriangleBar", "[", "x", ",", "y", "]"}
  FullForm: LeftTriangleBar[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

LeftTriangleEqual:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"⊴"}
  # O-tokens: {}
  usage: "x ⊴ y"
  # parse: {"LeftTriangleEqual", "[", "x", ",", "y", "]"}
  FullForm: LeftTriangleEqual[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

LeftUpDownVector:
  actual-precedence: 740
  precedence: 580
  WolframLanguageData:
  WolframLanguageData-corrected: 21.5
  UnicodeCharacters.tr: 650
  UnicodeCharacters-corrected.tr: 650
  # N-tokens: {}
  # L-tokens: {"⥑"}
  # O-tokens: {}
  usage: "x ⥑ y"
  # parse: {"LeftUpDownVector", "[", "x", ",", "y", "]"}
  FullForm: LeftUpDownVector[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

LeftUpTeeVector:
  actual-precedence: 740
  precedence: 580
  WolframLanguageData:
  WolframLanguageData-corrected: 21.5
  UnicodeCharacters.tr: 650
  UnicodeCharacters-corrected.tr: 650
  # N-tokens: {}
  # L-tokens: {"⥠"}
  # O-tokens: {}
  usage: "x ⥠ y"
  # parse: {"LeftUpTeeVector", "[", "x", ",", "y", "]"}
  FullForm: LeftUpTeeVector[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

LeftUpVector:
  actual-precedence: 740
  precedence: 580
  WolframLanguageData:
  WolframLanguageData-corrected: 21.5
  UnicodeCharacters.tr: 650
  UnicodeCharacters-corrected.tr: 650
  # N-tokens: {}
  # L-tokens: {"↿"}
  # O-tokens: {}
  usage: "x ↿ y"
  # parse: {"LeftUpVector", "[", "x", ",", "y", "]"}
  FullForm: LeftUpVector[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

LeftUpVectorBar:
  actual-precedence: 740
  precedence: 580
  WolframLanguageData:
  WolframLanguageData-corrected: 21.5
  UnicodeCharacters.tr: 650
  UnicodeCharacters-corrected.tr: 650
  # N-tokens: {}
  # L-tokens: {"⥘"}
  # O-tokens: {}
  usage: "x ⥘ y"
  # parse: {"LeftUpVectorBar", "[", "x", ",", "y", "]"}
  FullForm: LeftUpVectorBar[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

LeftVector:
  actual-precedence: 340
  precedence: 270
  WolframLanguageData:
  WolframLanguageData-corrected: 50.6
  UnicodeCharacters.tr: 380
  UnicodeCharacters-corrected.tr: 380
  # N-tokens: {}
  # L-tokens: {"↼"}
  # O-tokens: {}
  usage: "x ↼ y"
  # parse: {"LeftVector", "[", "x", ",", "y", "]"}
  FullForm: LeftVector[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

LeftVectorBar:
  actual-precedence: 340
  precedence: 270
  WolframLanguageData:
  WolframLanguageData-corrected: 50.6
  UnicodeCharacters.tr: 380
  UnicodeCharacters-corrected.tr: 380
  # N-tokens: {}
  # L-tokens: {"⥒"}
  # O-tokens: {}
  usage: "x ⥒ y"
  # parse: {"LeftVectorBar", "[", "x", ",", "y", "]"}
  FullForm: LeftVectorBar[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

Less:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData: 50
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"<"}
  # O-tokens: {}
  usage: "expr1 < expr2"
  # parse: {"Less", "[", "expr1", ",", "expr2", "]"}
  FullForm: Less[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: true
  # comments:

LessEqual:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData: 50
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"<=", "≤"}
  # O-tokens: {}
  usage: "expr1", "<=", "expr2"}, {"expr1 ≤ expr2"
  # parse: {"LessEqual", "[", "expr1", ",", "expr2", "]"}
  FullForm: LessEqual[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: true
  # comments:

LessEqualGreater:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"⋚"}
  # O-tokens: {}
  usage: "x ⋚ y"
  # parse: {"LessEqualGreater", "[", "x", ",", "y", "]"}
  FullForm: LessEqualGreater[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

LessFullEqual:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"≦"}
  # O-tokens: {}
  usage: "x ≦ y"
  # parse: {"LessFullEqual", "[", "x", ",", "y", "]"}
  FullForm: LessFullEqual[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

LessGreater:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"≶"}
  # O-tokens: {}
  usage: "x ≶ y"
  # parse: {"LessGreater", "[", "x", ",", "y", "]"}
  FullForm: LessGreater[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

LessLess:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"≪"}
  # O-tokens: {}
  usage: "x ≪ y"
  # parse: {"LessLess", "[", "x", ",", "y", "]"}
  FullForm: LessLess[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

LessSlantEqual:
  actual-precedence: 360
  Precedence-Function: 670
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"⩽"}
  # O-tokens: {}
  usage: "x ⩽ y"
  # parse: {"LessEqual", "[", "x", ",", "y", "]"}
  FullForm: LessEqual[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

LessTilde:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"≲"}
  # O-tokens: {}
  usage: "x ≲ y"
  # parse: {"LessTilde", "[", "x", ",", "y", "]"}
  FullForm: LessTilde[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

Limit:
  actual-precedence: 410
  precedence: 320
  WolframLanguageData:
  WolframLanguageData-corrected: 45.5
  UnicodeCharacters.tr: 440
  UnicodeCharacters-corrected.tr: 440
  # N-tokens: {""}
  # L-tokens: {}
  # O-tokens: {}
  usage: "{{"", "expr"}}"
  # parse: {"Limit", "[", "expr", "]"}
  arity: Unary
  affix: Prefix
  associativity: right
  meaningful: true
  # comments: Usage and Parse may not be correct.

List:
  actual-precedence: -10
  Precedence-Function: 670
  precedence: 760
  WolframLanguageData: 1
  WolframLanguageData-corrected: 1
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: -10
  # N-tokens: {"{"}
  # L-tokens: {}
  # O-tokens: {"}"}
  usage: "{ expr }"
  # parse: {"List", "[", "expr", ",", "…", "]"}
  FullForm: List[expr, \[Ellipsis]]
  arity: n-ary
  affix: Matchfix
  associativity: null
  meaningful: true
  # comments:

LongLeftArrow:
  actual-precedence: 740
  precedence: 580
  WolframLanguageData:
  WolframLanguageData-corrected: 21.5
  UnicodeCharacters.tr: 650
  UnicodeCharacters-corrected.tr: 650
  # N-tokens: {}
  # L-tokens: {"⟵"}
  # O-tokens: {}
  usage: "x ⟵ y"
  # parse: {"LongLeftArrow", "[", "x", ",", "y", "]"}
  FullForm: LongLeftArrow[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

LongLeftRightArrow:
  actual-precedence: 740
  precedence: 580
  WolframLanguageData:
  WolframLanguageData-corrected: 21.5
  UnicodeCharacters.tr: 650
  UnicodeCharacters-corrected.tr: 650
  # N-tokens: {}
  # L-tokens: {"⟷"}
  # O-tokens: {}
  usage: "x ⟷ y"
  # parse: {"LongLeftRightArrow", "[", "x", ",", "y", "]"}
  FullForm: LongLeftRightArrow[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

LongRightArrow:
  actual-precedence: 740
  precedence: 580
  WolframLanguageData:
  WolframLanguageData-corrected: 21.5
  UnicodeCharacters.tr: 650
  UnicodeCharacters-corrected.tr: 650
  # N-tokens: {}
  # L-tokens: {"⟶"}
  # O-tokens: {}
  usage: "x ⟶ y"
  # parse: {"LongRightArrow", "[", "x", ",", "y", "]"}
  FullForm: LongRightArrow[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

LowerLeftArrow:
  actual-precedence: 340
  precedence: 270
  WolframLanguageData:
  WolframLanguageData-corrected: 50.6
  UnicodeCharacters.tr: 380
  UnicodeCharacters-corrected.tr: 380
  # N-tokens: {}
  # L-tokens: {"↙"}
  # O-tokens: {}
  usage: "x ↙ y"
  # parse: {"LowerLeftArrow", "[", "x", ",", "y", "]"}
  FullForm: LowerLeftArrow[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

LowerRightArrow:
  actual-precedence: 340
  precedence: 270
  WolframLanguageData:
  WolframLanguageData-corrected: 50.6
  UnicodeCharacters.tr: 380
  UnicodeCharacters-corrected.tr: 380
  # N-tokens: {}
  # L-tokens: {"↘"}
  # O-tokens: {}
  usage: "x ↘ y"
  # parse: {"LowerRightArrow", "[", "x", ",", "y", "]"}
  FullForm: LowerRightArrow[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

Map:
  actual-precedence: 800
  precedence: 620
  WolframLanguageData: 16
  WolframLanguageData-corrected: 16
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 710
  # N-tokens: {}
  # L-tokens: {"/@"}
  # O-tokens: {}
  usage: "expr1 /@ expr2"
  # parse: {"Map", "[", "expr1", ",", "expr2", "]"}
  FullForm: Map[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: right
  meaningful: true
  # comments:

MapAll:
  actual-precedence: 800
  precedence: 620
  WolframLanguageData: 16
  WolframLanguageData-corrected: 16
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 710
  # N-tokens: {}
  # L-tokens: {"//@"}
  # O-tokens: {}
  usage: "expr1 //@ expr2"
  # parse: {"MapAll", "[", "expr1", ",", "expr2", "]"}
  FullForm: MapAll[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: right
  meaningful: true
  # comments:

MapApply:
  actual-precedence: 810
  Precedence-Function: 620
  precedence: 625
  WolframLanguageData: 16
  WolframLanguageData-corrected: 16
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 710
  # N-tokens: {}
  # L-tokens: {"@@@"}
  # O-tokens: {}
  usage: "expr1 @@@ expr2"
  # parse: {"Apply", "[", "expr1", ",", "expr2", "{", "1", "}", "]"}
  FullForm: MapApply[expr1, expr2, List[1]]
  arity: Binary
  affix: Infix
  associativity: right
  meaningful: true
  # comments:

MaxLimit:
  actual-precedence: 410
  precedence: 320
  WolframLanguageData:
  WolframLanguageData-corrected: 45.5
  UnicodeCharacters.tr: 440
  UnicodeCharacters-corrected.tr: 440
  # N-tokens: {""}
  # L-tokens: {}
  # O-tokens: {}
  usage: "{{"", "expr"}}"
  # parse: {"MaxLimit", "[", "expr", "]"}
  arity: Unary
  affix: Prefix
  associativity: right
  meaningful: true
  # comments: Usage and Parse may not be correct.

MessageName:
  actual-precedence: 1060
  precedence: 750
  WolframLanguageData: 2
  WolframLanguageData-corrected: 2
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 850
  # N-tokens: {}
  # L-tokens: {"::"}
  # O-tokens: {}
  usage: "expr :: string"
  # parse: {"MessageName", "[", "expr", ",", "", "string", "", "]"}
  FullForm: MessageName[expr, "string"]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: true
  # comments:

MinLimit:
  actual-precedence: 410
  precedence: 320
  WolframLanguageData:
  WolframLanguageData-corrected: 45.5
  UnicodeCharacters.tr: 440
  UnicodeCharacters-corrected.tr: 440
  # N-tokens: {""}
  # L-tokens: {}
  # O-tokens: {}
  usage: "{{"", "expr"}}"
  # parse: {"MinLimit", "[", "expr", "]"}
  arity: Unary
  affix: Prefix
  associativity: right
  meaningful: true
  # comments: Usage and Parse may not be correct.

Minus:
  actual-precedence: 580
  precedence: 480
  WolframLanguageData: 30
  WolframLanguageData-corrected: 30
  UnicodeCharacters.tr: 430
  UnicodeCharacters-corrected.tr: 600
  # N-tokens: {"-", "−"}
  # L-tokens: {}
  # O-tokens: {}
  usage: "- expr"}, {"− expr"
  # parse: {"Minus", "[", "expr", "]"}
  FullForm: Times[-1, expr]
  arity: Unary
  affix: Prefix
  associativity: right
  meaningful: true
  # comments: Operator Notations includes usages with invisible unicode characters.

MinusPlus:
  actual-precedence: 400
  precedence: 310
  WolframLanguageData: 46
  WolframLanguageData-corrected: 46
  UnicodeCharacters.tr: 430
  UnicodeCharacters-corrected.tr: 430
  # N-tokens: {}
  # L-tokens: {"∓"}
  # O-tokens: {}
  usage: "expr1 ∓ expr2"
  # parse: {"MinusPlus", "[", "expr1", ",", "expr2", "]"}
  FullForm: MinusPlus[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: left
  meaningful: false
  # comments:

NamedBlank:
  actual-precedence: 990
  precedence: 730
  WolframLanguageData: 5
  WolframLanguageData-corrected: 5
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 820
  # N-tokens: {}
  # L-tokens: {"_"}
  # O-tokens: {}
  usage: "{{"symb", "_"}}"
  # parse: {"Pattern", "[", "symb", ",", "Blank", "[", "]", "]"}
  FullForm: Pattern[symb, Blank[]]
  arity: Unary
  affix: Postfix
  associativity: null
  meaningful: true
  # comments:

NamedBlankHead:
  actual-precedence: 1000
  precedence: 730
  WolframLanguageData: 5
  WolframLanguageData-corrected: 5
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 820
  # N-tokens: {}
  # L-tokens: {"_"}
  # O-tokens: {}
  usage: "symb _ expr"
  # parse: {"Pattern", "[", "symb", ",", "Blank", "[", "expr", "]", "]"}
  FullForm: Pattern[symb, Blank[expr]]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: true
  # comments:

NamedBlankNullSequence:
  actual-precedence: 990
  precedence: 730
  WolframLanguageData: 5
  WolframLanguageData-corrected: 5
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 820
  # N-tokens: {}
  # L-tokens: {"___"}
  # O-tokens: {}
  usage: "{{"symb", "___"}}"
  # parse: {"Pattern", "[", "symb", ",", "BlankNullSequence", "[", "]", "]"}
  FullForm: Pattern[symb, BlankNullSequence[]]
  arity: Unary
  affix: Postfix
  associativity: null
  meaningful: true
  # comments:

NamedBlankNullSequenceHead:
  actual-precedence: 1000
  precedence: 730
  WolframLanguageData: 5
  WolframLanguageData-corrected: 5
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 820
  # N-tokens: {}
  # L-tokens: {"___"}
  # O-tokens: {}
  usage: "symb ___ expr"
  # parse: {"Pattern", "[", "symb", ",", "BlankNullSequence", "[", "expr", "]", "]"}
  FullForm: Pattern[symb, BlankNullSequence[expr]]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: true
  # comments:

NamedBlankOptional:
  actual-precedence: 990
  precedence: 730
  WolframLanguageData: 5
  WolframLanguageData-corrected: 5
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 820
  # N-tokens: {}
  # L-tokens: {"_."}
  # O-tokens: {}
  usage: "{{"symb", "_."}}"
  # parse: {"Optional", "[", "Pattern", ",", "Blank", "[", "]", "]", "]"}
  FullForm: Optional[Pattern[symb, Blank[]]]
  arity: Unary
  affix: Postfix
  associativity: null
  meaningful: true
  # comments:

NamedBlankSequence:
  actual-precedence: 990
  precedence: 730
  WolframLanguageData: 5
  WolframLanguageData-corrected: 5
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 820
  # N-tokens: {}
  # L-tokens: {"__"}
  # O-tokens: {}
  usage: "{{"symb", "__"}}"
  # parse: {"Pattern", "[", "symb", ",", "BlankSequence", "[", "]", "]"}
  FullForm: Pattern[symb, BlankSequence[]]
  arity: Unary
  affix: Postfix
  associativity: null
  meaningful: true
  # comments:

NamedBlankSequenceHead:
  actual-precedence: 1000
  precedence: 730
  WolframLanguageData: 5
  WolframLanguageData-corrected: 5
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 820
  # N-tokens: {}
  # L-tokens: {"__"}
  # O-tokens: {}
  usage: "symb __ expr"
  # parse: {"Pattern", "[", "symb", ",", "BlankSequence", "[", "expr", "]", "]"}
  FullForm: Pattern[symb, BlankSequence[expr]]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: true
  # comments:

Nand:
  actual-precedence: 290
  Precedence-Function: 215
  precedence: 220
  WolframLanguageData: 55
  WolframLanguageData-corrected: 55
  UnicodeCharacters.tr: 330
  UnicodeCharacters-corrected.tr: 330
  # N-tokens: {}
  # L-tokens: {"⊼"}
  # O-tokens: {}
  usage: "expr1 ⊼ expr2"
  # parse: {"Nand", "[", "expr1", ",", "expr2", "]"}
  FullForm: Nand[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: true
  # comments:

NestedGreaterGreater:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"⪢"}
  # O-tokens: {}
  usage: "x ⪢ y"
  # parse: {"NestedGreaterGreater", "[", "x", ",", "y", "]"}
  FullForm: NestedGreaterGreater[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

NestedLessLess:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"⪡"}
  # O-tokens: {}
  usage: "x ⪡ y"
  # parse: {"NestedLessLess", "[", "x", ",", "y", "]"}
  FullForm: NestedLessLess[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

NonCommutativeMultiply:
  actual-precedence: 650
  precedence: 510
  WolframLanguageData: 27
  WolframLanguageData-corrected: 27
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 607
  # N-tokens: {}
  # L-tokens: {"**"}
  # O-tokens: {}
  usage: "expr1 ** expr2"
  # parse: {"NonCommutativeMultiply", "[", "expr1", ",", "expr2", "]"}
  FullForm: NonCommutativeMultiply[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: true
  # comments:

Nor:
  actual-precedence: 270
  Precedence-Function: 215
  precedence: 210
  WolframLanguageData: 57
  WolframLanguageData-corrected: 57
  UnicodeCharacters.tr: 320
  UnicodeCharacters-corrected.tr: 320
  # N-tokens: {}
  # L-tokens: {"⊽"}
  # O-tokens: {}
  usage: "expr1 ⊽ expr2"
  # parse: {"Nor", "[", "expr1", ",", "expr2", "]"}
  FullForm: Nor[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: true
  # comments:

Not:
  actual-precedence: 300
  precedence: 230
  WolframLanguageData: 54
  WolframLanguageData-corrected: 54
  UnicodeCharacters.tr: 340
  UnicodeCharacters-corrected.tr: 340
  # N-tokens: {"!", "¬"}
  # L-tokens: {}
  # O-tokens: {}
  usage: "! expr"}, {"¬ expr"
  # parse: {"Not", "[", "expr", "]"}
  FullForm: Not[expr]
  arity: Unary
  affix: Prefix
  associativity: right
  meaningful: true
  # comments:

NotCongruent:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"≢"}
  # O-tokens: {}
  usage: "x ≢ y"
  # parse: {"NotCongruent", "[", "x", ",", "y", "]"}
  FullForm: NotCongruent[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

NotCupCap:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"≭"}
  # O-tokens: {}
  usage: "x ≭ y"
  # parse: {"NotCupCap", "[", "x", ",", "y", "]"}
  FullForm: NotCupCap[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

NotDoubleVerticalBar:
  actual-precedence: 350
  precedence: 280
  WolframLanguageData: 50
  WolframLanguageData-corrected: 50.5
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 385
  # N-tokens: {}
  # L-tokens: {"∦"}
  # O-tokens: {}
  usage: "expr1 ∦ expr2"
  # parse: {"NotDoubleVerticalBar", "[", "expr1", ",", "expr2", "]"}
  FullForm: NotDoubleVerticalBar[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

NotElement:
  actual-precedence: 320
  precedence: 250
  WolframLanguageData: 52
  WolframLanguageData-corrected: 52
  UnicodeCharacters.tr: 360
  UnicodeCharacters-corrected.tr: 360
  # N-tokens: {}
  # L-tokens: {"∉"}
  # O-tokens: {}
  usage: "expr1 ∉ expr2"
  # parse: {"NotElement", "[", "expr1", ",", "expr2", "]"}
  FullForm: NotElement[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: true
  # comments:

NotEqualTilde:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {""}
  # O-tokens: {}
  usage: "x  y"
  # parse: {"NotEqualTilde", "[", "x", ",", "y", "]"}
  FullForm: NotEqualTilde[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

NotExists:
  actual-precedence: 310
  precedence: 240
  WolframLanguageData: 53
  WolframLanguageData-corrected: 53
  UnicodeCharacters.tr: 350
  UnicodeCharacters-corrected.tr: 350
  # N-tokens: {"∄"}
  # L-tokens: {}
  # O-tokens: {}
  usage: "{{"∄", "expr"}}"
  # parse: {"NotExists", "[", "expr", "]"}
  arity: Unary
  affix: Prefix
  associativity: right
  meaningful: true
  # comments: Usage and Parse may not be correct.

NotGreater:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"≯"}
  # O-tokens: {}
  usage: "x ≯ y"
  # parse: {"NotGreater", "[", "x", ",", "y", "]"}
  FullForm: NotGreater[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

NotGreaterEqual:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"≱"}
  # O-tokens: {}
  usage: "x ≱ y"
  # parse: {"NotGreaterEqual", "[", "x", ",", "y", "]"}
  FullForm: NotGreaterEqual[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

NotGreaterFullEqual:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"≩"}
  # O-tokens: {}
  usage: "x ≩ y"
  # parse: {"NotGreaterFullEqual", "[", "x", ",", "y", "]"}
  FullForm: NotGreaterFullEqual[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

NotGreaterGreater:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {""}
  # O-tokens: {}
  usage: "x  y"
  # parse: {"NotGreaterGreater", "[", "x", ",", "y", "]"}
  FullForm: NotGreaterGreater[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

NotGreaterLess:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"≹"}
  # O-tokens: {}
  usage: "x ≹ y"
  # parse: {"NotGreaterLess", "[", "x", ",", "y", "]"}
  FullForm: NotGreaterLess[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

NotGreaterSlantEqual:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {""}
  # O-tokens: {}
  usage: "x  y"
  # parse: {"NotGreaterSlantEqual", "[", "x", ",", "y", "]"}
  FullForm: NotGreaterSlantEqual[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

NotGreaterTilde:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"≵"}
  # O-tokens: {}
  usage: "x ≵ y"
  # parse: {"NotGreaterTilde", "[", "x", ",", "y", "]"}
  FullForm: NotGreaterTilde[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

NotHumpDownHump:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {""}
  # O-tokens: {}
  usage: "x  y"
  # parse: {"NotHumpDownHump", "[", "x", ",", "y", "]"}
  FullForm: NotHumpDownHump[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

NotHumpEqual:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {""}
  # O-tokens: {}
  usage: "x  y"
  # parse: {"NotHumpEqual", "[", "x", ",", "y", "]"}
  FullForm: NotHumpEqual[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

NotLeftTriangle:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"⋪"}
  # O-tokens: {}
  usage: "x ⋪ y"
  # parse: {"NotLeftTriangle", "[", "x", ",", "y", "]"}
  FullForm: NotLeftTriangle[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

NotLeftTriangleBar:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {""}
  # O-tokens: {}
  usage: "x  y"
  # parse: {"NotLeftTriangleBar", "[", "x", ",", "y", "]"}
  FullForm: NotLeftTriangleBar[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

NotLeftTriangleEqual:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"⋬"}
  # O-tokens: {}
  usage: "x ⋬ y"
  # parse: {"NotLeftTriangleEqual", "[", "x", ",", "y", "]"}
  FullForm: NotLeftTriangleEqual[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

NotLess:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"≮"}
  # O-tokens: {}
  usage: "x ≮ y"
  # parse: {"NotLess", "[", "x", ",", "y", "]"}
  FullForm: NotLess[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

NotLessEqual:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"≰"}
  # O-tokens: {}
  usage: "x ≰ y"
  # parse: {"NotLessEqual", "[", "x", ",", "y", "]"}
  FullForm: NotLessEqual[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

NotLessFullEqual:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"≨"}
  # O-tokens: {}
  usage: "x ≨ y"
  # parse: {"NotLessFullEqual", "[", "x", ",", "y", "]"}
  FullForm: NotLessFullEqual[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

NotLessGreater:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"≸"}
  # O-tokens: {}
  usage: "x ≸ y"
  # parse: {"NotLessGreater", "[", "x", ",", "y", "]"}
  FullForm: NotLessGreater[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

NotLessLess:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {""}
  # O-tokens: {}
  usage: "x  y"
  # parse: {"NotLessLess", "[", "x", ",", "y", "]"}
  FullForm: NotLessLess[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

NotLessSlantEqual:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {""}
  # O-tokens: {}
  usage: "x  y"
  # parse: {"NotLessSlantEqual", "[", "x", ",", "y", "]"}
  FullForm: NotLessSlantEqual[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

NotLessTilde:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"≴"}
  # O-tokens: {}
  usage: "x ≴ y"
  # parse: {"NotLessTilde", "[", "x", ",", "y", "]"}
  FullForm: NotLessTilde[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

NotNestedGreaterGreater:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {""}
  # O-tokens: {}
  usage: "x  y"
  # parse: {"NotNestedGreaterGreater", "[", "x", ",", "y", "]"}
  FullForm: NotNestedGreaterGreater[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

NotNestedLessLess:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {""}
  # O-tokens: {}
  usage: "x  y"
  # parse: {"NotNestedLessLess", "[", "x", ",", "y", "]"}
  FullForm: NotNestedLessLess[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

NotPrecedes:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"⊀"}
  # O-tokens: {}
  usage: "x ⊀ y"
  # parse: {"NotPrecedes", "[", "x", ",", "y", "]"}
  FullForm: NotPrecedes[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

NotPrecedesEqual:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {""}
  # O-tokens: {}
  usage: "x  y"
  # parse: {"NotPrecedesEqual", "[", "x", ",", "y", "]"}
  FullForm: NotPrecedesEqual[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

NotPrecedesSlantEqual:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"⋠"}
  # O-tokens: {}
  usage: "x ⋠ y"
  # parse: {"NotPrecedesSlantEqual", "[", "x", ",", "y", "]"}
  FullForm: NotPrecedesSlantEqual[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

NotPrecedesTilde:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"⋨"}
  # O-tokens: {}
  usage: "x ⋨ y"
  # parse: {"NotPrecedesTilde", "[", "x", ",", "y", "]"}
  FullForm: NotPrecedesTilde[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

NotReverseElement:
  actual-precedence: 320
  precedence: 250
  WolframLanguageData:
  WolframLanguageData-corrected: 52
  UnicodeCharacters.tr: 360
  UnicodeCharacters-corrected.tr: 360
  # N-tokens: {}
  # L-tokens: {"∌"}
  # O-tokens: {}
  usage: "x ∌ y"
  # parse: {"NotReverseElement", "[", "x", ",", "y", "]"}
  FullForm: NotReverseElement[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

NotRightTriangle:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"⋫"}
  # O-tokens: {}
  usage: "x ⋫ y"
  # parse: {"NotRightTriangle", "[", "x", ",", "y", "]"}
  FullForm: NotRightTriangle[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

NotRightTriangleBar:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {""}
  # O-tokens: {}
  usage: "x  y"
  # parse: {"NotRightTriangleBar", "[", "x", ",", "y", "]"}
  FullForm: NotRightTriangleBar[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

NotRightTriangleEqual:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"⋭"}
  # O-tokens: {}
  usage: "x ⋭ y"
  # parse: {"NotRightTriangleEqual", "[", "x", ",", "y", "]"}
  FullForm: NotRightTriangleEqual[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

NotSquareSubset:
  actual-precedence: 320
  precedence: 250
  WolframLanguageData:
  WolframLanguageData-corrected: 52
  UnicodeCharacters.tr: 360
  UnicodeCharacters-corrected.tr: 360
  # N-tokens: {}
  # L-tokens: {""}
  # O-tokens: {}
  usage: "x  y"
  # parse: {"NotSquareSubset", "[", "x", ",", "y", "]"}
  FullForm: NotSquareSubset[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

NotSquareSubsetEqual:
  actual-precedence: 320
  precedence: 250
  WolframLanguageData:
  WolframLanguageData-corrected: 52
  UnicodeCharacters.tr: 360
  UnicodeCharacters-corrected.tr: 360
  # N-tokens: {}
  # L-tokens: {"⋢"}
  # O-tokens: {}
  usage: "x ⋢ y"
  # parse: {"NotSquareSubsetEqual", "[", "x", ",", "y", "]"}
  FullForm: NotSquareSubsetEqual[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

NotSquareSuperset:
  actual-precedence: 320
  precedence: 250
  WolframLanguageData:
  WolframLanguageData-corrected: 52
  UnicodeCharacters.tr: 360
  UnicodeCharacters-corrected.tr: 360
  # N-tokens: {}
  # L-tokens: {""}
  # O-tokens: {}
  usage: "x  y"
  # parse: {"NotSquareSuperset", "[", "x", ",", "y", "]"}
  FullForm: NotSquareSuperset[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

NotSquareSupersetEqual:
  actual-precedence: 320
  precedence: 250
  WolframLanguageData:
  WolframLanguageData-corrected: 52
  UnicodeCharacters.tr: 360
  UnicodeCharacters-corrected.tr: 360
  # N-tokens: {}
  # L-tokens: {"⋣"}
  # O-tokens: {}
  usage: "x ⋣ y"
  # parse: {"NotSquareSupersetEqual", "[", "x", ",", "y", "]"}
  FullForm: NotSquareSupersetEqual[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

NotSubset:
  actual-precedence: 320
  precedence: 250
  WolframLanguageData:
  WolframLanguageData-corrected: 52
  UnicodeCharacters.tr: 360
  UnicodeCharacters-corrected.tr: 360
  # N-tokens: {}
  # L-tokens: {"⊄"}
  # O-tokens: {}
  usage: "x ⊄ y"
  # parse: {"NotSubset", "[", "x", ",", "y", "]"}
  FullForm: NotSubset[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

NotSubsetEqual:
  actual-precedence: 320
  precedence: 250
  WolframLanguageData:
  WolframLanguageData-corrected: 52
  UnicodeCharacters.tr: 360
  UnicodeCharacters-corrected.tr: 360
  # N-tokens: {}
  # L-tokens: {"⊈"}
  # O-tokens: {}
  usage: "x ⊈ y"
  # parse: {"NotSubsetEqual", "[", "x", ",", "y", "]"}
  FullForm: NotSubsetEqual[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

NotSucceeds:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"⊁"}
  # O-tokens: {}
  usage: "x ⊁ y"
  # parse: {"NotSucceeds", "[", "x", ",", "y", "]"}
  FullForm: NotSucceeds[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

NotSucceedsEqual:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {""}
  # O-tokens: {}
  usage: "x  y"
  # parse: {"NotSucceedsEqual", "[", "x", ",", "y", "]"}
  FullForm: NotSucceedsEqual[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

NotSucceedsSlantEqual:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"⋡"}
  # O-tokens: {}
  usage: "x ⋡ y"
  # parse: {"NotSucceedsSlantEqual", "[", "x", ",", "y", "]"}
  FullForm: NotSucceedsSlantEqual[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

NotSucceedsTilde:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"⋩"}
  # O-tokens: {}
  usage: "x ⋩ y"
  # parse: {"NotSucceedsTilde", "[", "x", ",", "y", "]"}
  FullForm: NotSucceedsTilde[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

NotSuperset:
  actual-precedence: 320
  precedence: 250
  WolframLanguageData:
  WolframLanguageData-corrected: 52
  UnicodeCharacters.tr: 360
  UnicodeCharacters-corrected.tr: 360
  # N-tokens: {}
  # L-tokens: {"⊅"}
  # O-tokens: {}
  usage: "x ⊅ y"
  # parse: {"NotSuperset", "[", "x", ",", "y", "]"}
  FullForm: NotSuperset[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

NotSupersetEqual:
  actual-precedence: 320
  precedence: 250
  WolframLanguageData:
  WolframLanguageData-corrected: 52
  UnicodeCharacters.tr: 360
  UnicodeCharacters-corrected.tr: 360
  # N-tokens: {}
  # L-tokens: {"⊉"}
  # O-tokens: {}
  usage: "x ⊉ y"
  # parse: {"NotSupersetEqual", "[", "x", ",", "y", "]"}
  FullForm: NotSupersetEqual[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

NotTilde:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"≁"}
  # O-tokens: {}
  usage: "x ≁ y"
  # parse: {"NotTilde", "[", "x", ",", "y", "]"}
  FullForm: NotTilde[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

NotTildeEqual:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"≄"}
  # O-tokens: {}
  usage: "x ≄ y"
  # parse: {"NotTildeEqual", "[", "x", ",", "y", "]"}
  FullForm: NotTildeEqual[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

NotTildeFullEqual:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"≇"}
  # O-tokens: {}
  usage: "x ≇ y"
  # parse: {"NotTildeFullEqual", "[", "x", ",", "y", "]"}
  FullForm: NotTildeFullEqual[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

NotTildeTilde:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"≉"}
  # O-tokens: {}
  usage: "x ≉ y"
  # parse: {"NotTildeTilde", "[", "x", ",", "y", "]"}
  FullForm: NotTildeTilde[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

NotVerticalBar:
  actual-precedence: 350
  precedence: 280
  WolframLanguageData: 50
  WolframLanguageData-corrected: 50.5
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 385
  # N-tokens: {}
  # L-tokens: {""}
  # O-tokens: {}
  usage: "expr1  expr2"
  # parse: {"NotVerticalBar", "[", "expr1", ",", "expr2", "]"}
  FullForm: NotVerticalBar[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

NumberBase:
  actual-precedence: -10
  Precedence-Function: 670
  precedence: 760
  WolframLanguageData:
  WolframLanguageData-corrected: 1
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: -10
  # N-tokens: {}
  # L-tokens: {"^^"}
  # O-tokens: {}
  usage: "n ^^ digits"
  # parse: {"n", "^^", "digits"}
  FullForm: n^^digits
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: true
  # comments: Interprets digits as a number literal in base n. The base n must be a positive integer no greater than 36.

NumberMagnitude:
  actual-precedence: -10
  Precedence-Function: 670
  precedence: 760
  WolframLanguageData:
  WolframLanguageData-corrected: 1
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: -10
  # N-tokens: {}
  # L-tokens: {"*^"}
  # O-tokens: {}
  usage: "number *^ magnitude"
  # parse: {"number", "*^", "magnitude"}
  FullForm: number*^magnitude
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: true
  # comments: Gives mantissa*base^magnitude, where base^^mantissa=number and magnitude is a decimal number expressed without ^^, `, or ``. Only allowed in a number literal, and only after any ` or ``.

NumberPrecision:
  actual-precedence: -10
  Precedence-Function: 670
  precedence: 760
  WolframLanguageData:
  WolframLanguageData-corrected: 1
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: -10
  # N-tokens: {}
  # L-tokens: {"`"}
  # O-tokens: {}
  usage: "number ` s"
  # parse: {"number", "`", "s"}
  FullForm: number`s
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: true
  # comments: Specifies the precision of number, where s is a positive decimal expressed without using ^^ or `. Any magnitude must come after `."

NumberPrecisionPostfix:
  actual-precedence: -10
  Precedence-Function: 670
  precedence: 760
  WolframLanguageData:
  WolframLanguageData-corrected: 1
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: -10
  # N-tokens: {}
  # L-tokens: {"`"}
  # O-tokens: {}
  usage: "{{"number", "`"}}"
  # parse: {"number", "`"}
  FullForm: number`
  arity: Unary
  affix: Postfix
  associativity: left
  meaningful: true
  # comments: Specifies the precision of number to be $MachinePrecision. Any magnitude must come after `."

Optional:
  actual-precedence: 190
  precedence: 140
  WolframLanguageData: 64
  WolframLanguageData-corrected: 64
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 270
  # N-tokens: {}
  # L-tokens: {":"}
  # O-tokens: {}
  usage: "patt : expr"
  # parse: {"Optional", "[", "patt", ",", "expr", "]"}
  FullForm: Optional[patt, expr]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: true
  # comments:

Or:
  actual-precedence: 270
  Precedence-Function: 215
  precedence: 210
  WolframLanguageData: 57
  WolframLanguageData-corrected: 57
  UnicodeCharacters.tr: 320
  UnicodeCharacters-corrected.tr: 320
  # N-tokens: {}
  # L-tokens: {"||", "∨"}
  # O-tokens: {}
  usage: "expr1", "||", "expr2"}, {"expr1 ∨ expr2"
  # parse: {"Or", "[", "expr1", ",", "expr2", "]"}
  FullForm: Or[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: true
  # comments:

Out:
  actual-precedence: 1030
  Precedence-Function: 670
  precedence: 735
  WolframLanguageData: 4
  WolframLanguageData-corrected: 4
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 830
  # N-tokens: {"%%"}
  # L-tokens: {}
  # O-tokens: {}
  usage: "%% … %"
  # parse: {"Out", "[", "-", "n", "]"}
  FullForm: Out[-n]
  arity: Nullary
  affix: None
  associativity: null
  meaningful: true
  # comments:

OutNumber:
  actual-precedence: 1020
  Precedence-Function: 670
  precedence: 735
  WolframLanguageData: 4
  WolframLanguageData-corrected: 4
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 830
  # N-tokens: {"%"}
  # L-tokens: {}
  # O-tokens: {}
  usage: "{{"%", "n"}}"
  # parse: {"Out", "[", "n", "]"}
  FullForm: Out[n]
  arity: Unary
  affix: Prefix
  associativity: null
  meaningful: true
  # comments:

OverscriptBox:
  actual-precedence: 950
  Precedence-Function: 670
  precedence: 710
  WolframLanguageData: 7
  WolframLanguageData-corrected: 7
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 790
  # N-tokens: {}
  # L-tokens: {"\&"}
  # O-tokens: {}
  usage: "expr1 \& expr2"
  # parse: {"OverscriptBox", "[", "expr1", ",", "expr2", "]"}
  arity: Binary
  affix: Infix
  associativity: missing["unknown"]
  meaningful: true
  # comments:

OverunderscriptBox:
  actual-precedence: 940
  Precedence-Function: 670
  precedence: 700
  WolframLanguageData: 7
  WolframLanguageData-corrected: 7.5
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 785
  # N-tokens: {}
  # L-tokens: {"\&"}
  # O-tokens: {"\%"}
  usage: "expr1", "\&", "expr2 \% expr3"
  # parse: {"UnderoverscriptBox", "[", "expr1", ",", "expr3", ",", "expr2", "]"}
  arity: Ternary
  affix: Infix
  associativity: missing["unknown"]
  meaningful: true
  # comments:

ParameterizedFunction:
  actual-precedence: 50
  Precedence-Function: 90
  precedence: 40
  WolframLanguageData: 75
  WolframLanguageData-corrected: 75
  UnicodeCharacters.tr: 190
  UnicodeCharacters-corrected.tr: 190
  # N-tokens: {}
  # L-tokens: {""}
  # O-tokens: {}
  usage: "expr1  expr2"
  # parse: {"Function", "[", "{", "expr1", "}", ",", "expr2", "]"}
  FullForm: Function[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: right
  meaningful: true
  # comments: The arrow form of Function.

Parentheses:
  actual-precedence: -10
  Precedence-Function: 670
  precedence: 760
  WolframLanguageData:
  WolframLanguageData-corrected: 1
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: -10
  # N-tokens: {"("}
  # L-tokens: {}
  # O-tokens: {")"}
  usage: "( expr )"
  # parse:
  arity: Unary
  affix: Matchfix
  associativity: null
  meaningful: true
  # comments:

Part:
  actual-precedence: 890
  precedence: 670
  WolframLanguageData: 10
  WolframLanguageData-corrected: 10
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 762
  # N-tokens: {}
  # L-tokens: {"[[", "〚"}
  # O-tokens: {"]]", "〛"}
  usage: "expr1", "[[", "expr2", "]]"}, {"expr1", "〚 expr2 〛"
  # parse: {"Part", "[", "expr1", ",", "expr2", "]"}
  FullForm: Part[expr1, expr2, \[Ellipsis]]
  arity: n-ary
  affix: Postfix
  associativity: left
  meaningful: true
  # comments:

PartialD:
  actual-precedence: 710
  Precedence-Function: 670
  precedence: 550
  WolframLanguageData: 24
  WolframLanguageData-corrected: 24
  UnicodeCharacters.tr: 620
  UnicodeCharacters-corrected.tr: 620
  # N-tokens: {"∂"}
  # L-tokens: {}
  # O-tokens: {}
  usage: "{{"∂", "expr"}}"
  # parse: {"PartialD", "[", "expr", "]"}
  arity: Unary
  affix: Prefix
  associativity: right
  meaningful: true
  # comments: Usage and Parse may not be correct.

PartialFractionBox:
  actual-precedence: 570
  Precedence-Function: 670
  precedence: 470
  WolframLanguageData:
  WolframLanguageData-corrected: 31
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 590
  # N-tokens: {}
  # L-tokens: {""}
  # O-tokens: {}
  usage: "expr"
  # parse: {"FractionBox", "[", "expr", ","\[", "Placeholder", "]"]"}
  arity: Unary
  affix: Postfix
  associativity: left
  meaningful: false
  # comments: This operator is an invisible Unicode character and is used in the layout of displayed expressions.

PartialOverscriptBox:
  actual-precedence: 950
  Precedence-Function: 670
  precedence: 710
  WolframLanguageData:
  WolframLanguageData-corrected: 7
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 790
  # N-tokens: {}
  # L-tokens: {""}
  # O-tokens: {}
  usage: "expr"
  # parse: {"FractionBox", "[", "expr", ","\[", "Placeholder", "]"]"}
  FullForm:
  arity: Unary
  affix: Postfix
  associativity: left
  meaningful: false
  # comments: This operator is an invisible Unicode character and is used in the layout of displayed expressions.

PartialSubscriptBox:
  actual-precedence: 920
  Precedence-Function: 670
  precedence: 690
  WolframLanguageData:
  WolframLanguageData-corrected: 8
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 775
  # N-tokens: {}
  # L-tokens: {""}
  # O-tokens: {}
  usage: "expr"
  # parse: {"FractionBox", "[", "expr", ","\[", "Placeholder", "]"]"}
  FullForm:
  arity: Unary
  affix: Postfix
  associativity: left
  meaningful: false
  # comments: This operator is an invisible Unicode character and is used in the layout of displayed expressions.

PartialSuperscriptBox:
  actual-precedence: 750
  Precedence-Function: 670
  precedence: 590
  WolframLanguageData:
  WolframLanguageData-corrected: 21
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 660
  # N-tokens: {}
  # L-tokens: {""}
  # O-tokens: {}
  usage: "{{"expr", ""}}"
  # parse: {"FractionBox", "[", "expr", ","\[", "Placeholder", "]"]"}
  FullForm:
  arity: Unary
  affix: Postfix
  associativity: left
  meaningful: false
  # comments: This operator is an invisible Unicode character and is used in the layout of displayed expressions.

PartialUnderscriptBox:
  actual-precedence: 950
  Precedence-Function: 670
  precedence: 710
  WolframLanguageData:
  WolframLanguageData-corrected: 7
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 790
  # N-tokens: {}
  # L-tokens: {""}
  # O-tokens: {}
  usage: "{{"expr", ""}}"
  # parse: {"FractionBox", "[", "expr", ","\[", "Placeholder", "]"]"}
  FullForm:
  arity: Unary
  affix: Postfix
  associativity: left
  meaningful: false
  # comments: This operator is an invisible Unicode character and is used in the layout of displayed expressions.

Pattern:
  actual-precedence: 190
  precedence: 150
  WolframLanguageData: 64
  WolframLanguageData-corrected: 64
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 275
  # N-tokens: {}
  # L-tokens: {":"}
  # O-tokens: {}
  usage: "symb : expr"
  # parse: {"Pattern", "[", "symb", ",", "expr", "]"}
  FullForm: Pattern[symb, expr]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: true
  # comments:

PatternTest:
  actual-precedence: 910
  precedence: 680
  WolframLanguageData: 9
  WolframLanguageData-corrected: 9
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 770
  # N-tokens: {}
  # L-tokens: {"?"}
  # O-tokens: {}
  usage: "expr1 ? expr2"
  # parse: {"PatternTest", "[", "expr1", ",", "expr2", "]"}
  FullForm: PatternTest[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: missing["unknown"]
  meaningful: true
  # comments:

PermutationProduct:
  actual-precedence: 600
  Precedence-Function: 520
  precedence: 486
  WolframLanguageData:
  WolframLanguageData-corrected: 29.7
  UnicodeCharacters.tr: 605
  UnicodeCharacters-corrected.tr: 602
  # N-tokens: {}
  # L-tokens: {""}
  # O-tokens: {}
  usage: "expr1  expr2"
  # parse: {"PermutationProduct", "[", "expr1", ",", "expr2", "]"}
  FullForm: PermutationProduct[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: true
  # comments:

Perpendicular:
  actual-precedence: 220
  precedence: 190
  WolframLanguageData:
  WolframLanguageData-corrected: 60
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"⟂"}
  # O-tokens: {}
  usage: "expr1 ⟂ expr2"
  # parse: {"Perpendicular", "[", "expr1", ",", "expr2", "]"}
  FullForm: Perpendicular[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

Piecewise:
  actual-precedence: 680
  Precedence-Function: 480
  precedence: 535
  WolframLanguageData: 1
  WolframLanguageData-corrected: 25.5
  UnicodeCharacters.tr: 600
  UnicodeCharacters-corrected.tr: 610
  # N-tokens: {""}
  # L-tokens: {}
  # O-tokens: {}
  usage: "{{"", "expr"}}"
  # parse: {"Piecewise", "[", "expr", "]"}
  FullForm:
  arity: Unary
  affix: Prefix
  associativity: right
  meaningful: true
  # comments: Usage and Parse may not be correct.

Plus:
  actual-precedence: 400
  precedence: 310
  WolframLanguageData: 46
  WolframLanguageData-corrected: 46
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 430
  # N-tokens: {}
  # L-tokens: {"+", ""}
  # O-tokens: {}
  usage: "expr1", "+", "expr2"}, {"expr1  expr2"
  # parse: {"Plus", "[", "expr1", ",", "expr2", "]"}
  FullForm: Plus[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: true
  # comments: Operator Notations includes usages with invisible unicode characters.

PlusMinus:
  actual-precedence: 400
  precedence: 310
  WolframLanguageData: 46
  WolframLanguageData-corrected: 46
  UnicodeCharacters.tr: 430
  UnicodeCharacters-corrected.tr: 430
  # N-tokens: {}
  # L-tokens: {"±"}
  # O-tokens: {}
  usage: "expr1 ± expr2"
  # parse: {"PlusMinus", "[", "expr1", ",", "expr2", "]"}
  FullForm: PlusMinus[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: left
  meaningful: false
  # comments:

Postfix:
  actual-precedence: 640
  precedence: 640
  WolframLanguageData: None
  WolframLanguageData-corrected: None
  UnicodeCharacters.tr: None
  UnicodeCharacters-corrected.tr: None
  # N-tokens: None
  # L-tokens: None
  # O-tokens: None
  usage: "expr // FormName"
  # parse: None
  FullForm: None
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: true
  # comments: None

Power:
  actual-precedence: 750
  precedence: 590
  WolframLanguageData: 21
  WolframLanguageData-corrected: 21
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 660
  # N-tokens: {}
  # L-tokens: {"^"}
  # O-tokens: {}
  usage: "expr1 ^ expr2"
  # parse: {"Power", "[", "expr1", ",", "expr2", "]"}
  FullForm: Power[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: right
  meaningful: true
  # comments:

PreDecrement:
  actual-precedence: 870
  precedence: 660
  WolframLanguageData: 12
  WolframLanguageData-corrected: 12
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 750
  # N-tokens: {"--"}
  # L-tokens: {}
  # O-tokens: {}
  usage: "{{"--", "expr"}}"
  # parse: {"PreDecrement", "[", "expr", "]"}
  FullForm: PreDecrement[expr]
  arity: Unary
  affix: Prefix
  associativity: right
  meaningful: true
  # comments:

PreIncrement:
  actual-precedence: 870
  precedence: 660
  WolframLanguageData: 12
  WolframLanguageData-corrected: 12
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 750
  # N-tokens: {"++"}
  # L-tokens: {}
  # O-tokens: {}
  usage: "{{"++", "expr"}}"
  # parse: {"PreIncrement", "[", "expr", "]"}
  FullForm: PreIncrement[expr]
  arity: Unary
  affix: Prefix
  associativity: right
  meaningful: true
  # comments:

Precedes:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"≺"}
  # O-tokens: {}
  usage: "x ≺ y"
  # parse: {"Precedes", "[", "x", ",", "y", "]"}
  FullForm: Precedes[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

PrecedesEqual:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"⪯"}
  # O-tokens: {}
  usage: "x ⪯ y"
  # parse: {"PrecedesEqual", "[", "x", ",", "y", "]"}
  FullForm: PrecedesEqual[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

PrecedesSlantEqual:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"≼"}
  # O-tokens: {}
  usage: "x ≼ y"
  # parse: {"PrecedesSlantEqual", "[", "x", ",", "y", "]"}
  FullForm: PrecedesSlantEqual[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

PrecedesTilde:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"≾"}
  # O-tokens: {}
  usage: "x ≾ y"
  # parse: {"PrecedesTilde", "[", "x", ",", "y", "]"}
  FullForm: PrecedesTilde[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

Prefix:
  actual-precedence: 640
  precedence: 640
  WolframLanguageData: None
  WolframLanguageData-corrected: None
  UnicodeCharacters.tr: None
  UnicodeCharacters-corrected.tr: None
  # N-tokens: None
  # L-tokens: None
  # O-tokens: None
  usage: "expr1 @ expr2"
  # parse: None
  FullForm: None
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: true
  # comments: None

ProbabilityPr:
  actual-precedence: 420
  precedence: 325
  WolframLanguageData:
  WolframLanguageData-corrected: 45
  UnicodeCharacters.tr: 455
  UnicodeCharacters-corrected.tr: 445
  # N-tokens: {""}
  # L-tokens: {}
  # O-tokens: {}
  usage: "{{"", "expr"}}"
  # parse: {"ProbabilityPr", "[", "expr", "]"}
  FullForm:
  arity: Unary
  affix: Prefix
  associativity: right
  meaningful: true
  # comments: Usage and Parse may not be correct.

Product:
  actual-precedence: 480
  precedence: 380
  WolframLanguageData: 40
  WolframLanguageData-corrected: 40
  UnicodeCharacters.tr: 500
  UnicodeCharacters-corrected.tr: 500
  # N-tokens: {"∏"}
  # L-tokens: {}
  # O-tokens: {}
  usage: "{{"∏", "expr"}}"
  # parse: {"Product", "[", "expr", "]"}
  FullForm:
  arity: Unary
  affix: Prefix
  associativity: right
  meaningful: true
  # comments: Usage and Parse may not be correct.

Proportion:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"∷"}
  # O-tokens: {}
  usage: "x ∷ y"
  # parse: {"Proportion", "[", "x", ",", "y", "]"}
  FullForm: Proportion[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

Proportional:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"∝"}
  # O-tokens: {}
  usage: "x ∝ y"
  # parse: {"Proportional", "[", "x", ",", "y", "]"}
  FullForm: Proportional[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

Put:
  actual-precedence: 40
  precedence: 30
  WolframLanguageData: 76
  WolframLanguageData-corrected: 76
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 180
  # N-tokens: {}
  # L-tokens: {">>"}
  # O-tokens: {}
  usage: "expr >> filename"
  # parse: {"Put", "[", "expr", ",", "", "filename"}
  FullForm: Put[expr, "filename"]
  arity: Binary
  affix: Infix
  associativity: left
  meaningful: true
  # comments:

PutAppend:
  actual-precedence: 40
  precedence: 30
  WolframLanguageData: 76
  WolframLanguageData-corrected: 76
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 180
  # N-tokens: {}
  # L-tokens: {">>>"}
  # O-tokens: {}
  usage: "expr >>> filename"
  # parse: {"PutAppend", "[", "expr", ",", "", "filename"}
  FullForm: PutAppend[expr, "filename"]
  arity: Binary
  affix: Infix
  associativity: left
  meaningful: true
  # comments:

RadicalBox:
  actual-precedence: 730
  Precedence-Function: 670
  precedence: 570
  WolframLanguageData: 22
  WolframLanguageData-corrected: 22
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 640
  # N-tokens: {"\@"}
  # L-tokens: {}
  # O-tokens: {"\%"}
  usage: "\@", "expr1 \% expr2"
  # parse: {"RadicalBox", "[", "expr1", ",", "expr2", "]"}
  FullForm:
  arity: Binary
  affix: Prefix
  associativity: right
  meaningful: true
  # comments:

RawBackquote:
  actual-precedence: -10
  Precedence-Function: 670
  precedence: 760
  WolframLanguageData:
  WolframLanguageData-corrected: 1
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: -10
  # N-tokens: {}
  # L-tokens: {"``"}
  # O-tokens: {}
  usage: "number `` s"
  # parse: {"number", "``", "s"}
  FullForm: number``s
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: true
  # comments: Specifies the accuracy (in number of digits to the right of decimal) of number, where s is a positive decimal expressed without using ^^ or `. A magnitude must come after ``.

Repeated:
  actual-precedence: 200
  precedence: 170
  WolframLanguageData: 62
  WolframLanguageData-corrected: 62
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 280
  # N-tokens: {}
  # L-tokens: {".."}
  # O-tokens: {}
  usage: "{{"expr", ".."}}"
  # parse: {"Repeated", "[", "expr", "]"}
  FullForm: Repeated[expr]
  arity: Unary
  affix: Postfix
  associativity: left
  meaningful: true
  # comments:

RepeatedNull:
  actual-precedence: 200
  precedence: 170
  WolframLanguageData: 62
  WolframLanguageData-corrected: 62
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 280
  # N-tokens: {}
  # L-tokens: {"..."}
  # O-tokens: {}
  usage: "{{"expr", "..."}}"
  # parse: {"RepeatedNull", "[", "expr", "]"}
  FullForm: RepeatedNull[expr]
  arity: Unary
  affix: Postfix
  associativity: left
  meaningful: true
  # comments:

ReplaceAll:
  actual-precedence: 130
  precedence: 110
  WolframLanguageData: 68
  WolframLanguageData-corrected: 68
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 240
  # N-tokens: {}
  # L-tokens: {"/."}
  # O-tokens: {}
  usage: "expr1 /. expr2"
  # parse: {"ReplaceAll", "[", "expr1", ",", "expr2", "]"}
  FullForm: ReplaceAll[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: left
  meaningful: true
  # comments:

ReplaceRepeated:
  actual-precedence: 130
  precedence: 110
  WolframLanguageData: 68
  WolframLanguageData-corrected: 68
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 240
  # N-tokens: {}
  # L-tokens: {"//."}
  # O-tokens: {}
  usage: "expr1 //. expr2"
  # parse: {"ReplaceRepeated", "[", "expr1", ",", "expr2", "]"}
  FullForm: ReplaceRepeated[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: left
  meaningful: true
  # comments:

ReverseElement:
  actual-precedence: 320
  precedence: 250
  WolframLanguageData:
  WolframLanguageData-corrected: 52
  UnicodeCharacters.tr: 360
  UnicodeCharacters-corrected.tr: 360
  # N-tokens: {}
  # L-tokens: {"∋"}
  # O-tokens: {}
  usage: "x ∋ y"
  # parse: {"ReverseElement", "[", "x", ",", "y", "]"}
  FullForm: ReverseElement[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

ReverseEquilibrium:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"⇋"}
  # O-tokens: {}
  usage: "x ⇋ y"
  # parse: {"ReverseEquilibrium", "[", "x", ",", "y", "]"}
  FullForm: ReverseEquilibrium[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

ReverseUpEquilibrium:
  actual-precedence: 740
  precedence: 580
  WolframLanguageData:
  WolframLanguageData-corrected: 21.5
  UnicodeCharacters.tr: 650
  UnicodeCharacters-corrected.tr: 650
  # N-tokens: {}
  # L-tokens: {"⥯"}
  # O-tokens: {}
  usage: "x ⥯ y"
  # parse: {"ReverseUpEquilibrium", "[", "x", ",", "y", "]"}
  FullForm: ReverseUpEquilibrium[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

RightArrow:
  actual-precedence: 340
  precedence: 270
  WolframLanguageData:
  WolframLanguageData-corrected: 50.6
  UnicodeCharacters.tr: 380
  UnicodeCharacters-corrected.tr: 380
  # N-tokens: {}
  # L-tokens: {"→"}
  # O-tokens: {}
  usage: "x → y"
  # parse: {"RightArrow", "[", "x", ",", "y", "]"}
  FullForm: RightArrow[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

RightArrowBar:
  actual-precedence: 340
  precedence: 270
  WolframLanguageData:
  WolframLanguageData-corrected: 50.6
  UnicodeCharacters.tr: 380
  UnicodeCharacters-corrected.tr: 380
  # N-tokens: {}
  # L-tokens: {"⇥"}
  # O-tokens: {}
  usage: "x ⇥ y"
  # parse: {"RightArrowBar", "[", "x", ",", "y", "]"}
  FullForm: RightArrowBar[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

RightArrowLeftArrow:
  actual-precedence: 340
  precedence: 270
  WolframLanguageData:
  WolframLanguageData-corrected: 50.6
  UnicodeCharacters.tr: 380
  UnicodeCharacters-corrected.tr: 380
  # N-tokens: {}
  # L-tokens: {"⇄"}
  # O-tokens: {}
  usage: "x ⇄ y"
  # parse: {"RightArrowLeftArrow", "[", "x", ",", "y", "]"}
  FullForm: RightArrowLeftArrow[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

RightComposition:
  actual-precedence: 850
  Precedence-Function: 624
  precedence: 650
  WolframLanguageData: 13
  WolframLanguageData-corrected: 13
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 740
  # N-tokens: {}
  # L-tokens: {"/*"}
  # O-tokens: {}
  usage: "expr1 /* expr2"
  # parse: {"RightComposition", "[", "expr1", ",", "expr2", "]"}
  FullForm: RightComposition[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: true
  # comments:

RightDownTeeVector:
  actual-precedence: 740
  precedence: 580
  WolframLanguageData:
  WolframLanguageData-corrected: 21.5
  UnicodeCharacters.tr: 650
  UnicodeCharacters-corrected.tr: 650
  # N-tokens: {}
  # L-tokens: {"⥝"}
  # O-tokens: {}
  usage: "x ⥝ y"
  # parse: {"RightDownTeeVector", "[", "x", ",", "y", "]"}
  FullForm: RightDownTeeVector[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

RightDownVector:
  actual-precedence: 740
  precedence: 580
  WolframLanguageData:
  WolframLanguageData-corrected: 21.5
  UnicodeCharacters.tr: 650
  UnicodeCharacters-corrected.tr: 650
  # N-tokens: {}
  # L-tokens: {"⇂"}
  # O-tokens: {}
  usage: "x ⇂ y"
  # parse: {"RightDownVector", "[", "x", ",", "y", "]"}
  FullForm: RightDownVector[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

RightDownVectorBar:
  actual-precedence: 740
  precedence: 580
  WolframLanguageData:
  WolframLanguageData-corrected: 21.5
  UnicodeCharacters.tr: 650
  UnicodeCharacters-corrected.tr: 650
  # N-tokens: {}
  # L-tokens: {"⥕"}
  # O-tokens: {}
  usage: "x ⥕ y"
  # parse: {"RightDownVectorBar", "[", "x", ",", "y", "]"}
  FullForm: RightDownVectorBar[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

RightTee:
  actual-precedence: 230
  precedence: 190
  WolframLanguageData:
  WolframLanguageData-corrected: 59.6
  UnicodeCharacters.tr: 300
  UnicodeCharacters-corrected.tr: 300
  # N-tokens: {}
  # L-tokens: {"⊢"}
  # O-tokens: {}
  usage: "expr1 ⊢ expr2"
  # parse: {"RightTee", "[", "expr1", ",", "expr2", "]"}
  FullForm: RightTee[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: right
  meaningful: false
  # comments:

RightTeeArrow:
  actual-precedence: 340
  precedence: 270
  WolframLanguageData:
  WolframLanguageData-corrected: 50.6
  UnicodeCharacters.tr: 380
  UnicodeCharacters-corrected.tr: 380
  # N-tokens: {}
  # L-tokens: {"↦"}
  # O-tokens: {}
  usage: "x ↦ y"
  # parse: {"RightTeeArrow", "[", "x", ",", "y", "]"}
  FullForm: RightTeeArrow[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

RightTeeVector:
  actual-precedence: 340
  precedence: 270
  WolframLanguageData:
  WolframLanguageData-corrected: 50.6
  UnicodeCharacters.tr: 380
  UnicodeCharacters-corrected.tr: 380
  # N-tokens: {}
  # L-tokens: {"⥛"}
  # O-tokens: {}
  usage: "x ⥛ y"
  # parse: {"RightTeeVector", "[", "x", ",", "y", "]"}
  FullForm: RightTeeVector[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

RightTriangle:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"⊳"}
  # O-tokens: {}
  usage: "x ⊳ y"
  # parse: {"RightTriangle", "[", "x", ",", "y", "]"}
  FullForm: RightTriangle[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

RightTriangleBar:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"⧐"}
  # O-tokens: {}
  usage: "x ⧐ y"
  # parse: {"RightTriangleBar", "[", "x", ",", "y", "]"}
  FullForm: RightTriangleBar[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

RightTriangleEqual:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"⊵"}
  # O-tokens: {}
  usage: "x ⊵ y"
  # parse: {"RightTriangleEqual", "[", "x", ",", "y", "]"}
  FullForm: RightTriangleEqual[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

RightUpDownVector:
  actual-precedence: 740
  precedence: 580
  WolframLanguageData:
  WolframLanguageData-corrected: 21.5
  UnicodeCharacters.tr: 650
  UnicodeCharacters-corrected.tr: 650
  # N-tokens: {}
  # L-tokens: {"⥏"}
  # O-tokens: {}
  usage: "x ⥏ y"
  # parse: {"RightUpDownVector", "[", "x", ",", "y", "]"}
  FullForm: RightUpDownVector[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

RightUpTeeVector:
  actual-precedence: 740
  precedence: 580
  WolframLanguageData:
  WolframLanguageData-corrected: 21.5
  UnicodeCharacters.tr: 650
  UnicodeCharacters-corrected.tr: 650
  # N-tokens: {}
  # L-tokens: {"⥜"}
  # O-tokens: {}
  usage: "x ⥜ y"
  # parse: {"RightUpTeeVector", "[", "x", ",", "y", "]"}
  FullForm: RightUpTeeVector[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

RightUpVector:
  actual-precedence: 740
  precedence: 580
  WolframLanguageData:
  WolframLanguageData-corrected: 21.5
  UnicodeCharacters.tr: 650
  UnicodeCharacters-corrected.tr: 650
  # N-tokens: {}
  # L-tokens: {"↾"}
  # O-tokens: {}
  usage: "x ↾ y"
  # parse: {"RightUpVector", "[", "x", ",", "y", "]"}
  FullForm: RightUpVector[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

RightUpVectorBar:
  actual-precedence: 740
  precedence: 580
  WolframLanguageData:
  WolframLanguageData-corrected: 21.5
  UnicodeCharacters.tr: 650
  UnicodeCharacters-corrected.tr: 650
  # N-tokens: {}
  # L-tokens: {"⥔"}
  # O-tokens: {}
  usage: "x ⥔ y"
  # parse: {"RightUpVectorBar", "[", "x", ",", "y", "]"}
  FullForm: RightUpVectorBar[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

RightVector:
  actual-precedence: 340
  precedence: 270
  WolframLanguageData:
  WolframLanguageData-corrected: 50.6
  UnicodeCharacters.tr: 380
  UnicodeCharacters-corrected.tr: 380
  # N-tokens: {}
  # L-tokens: {"⇀"}
  # O-tokens: {}
  usage: "x ⇀ y"
  # parse: {"RightVector", "[", "x", ",", "y", "]"}
  FullForm: RightVector[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

RightVectorBar:
  actual-precedence: 340
  precedence: 270
  WolframLanguageData:
  WolframLanguageData-corrected: 50.6
  UnicodeCharacters.tr: 380
  UnicodeCharacters-corrected.tr: 380
  # N-tokens: {}
  # L-tokens: {"⥓"}
  # O-tokens: {}
  usage: "x ⥓ y"
  # parse: {"RightVectorBar", "[", "x", ",", "y", "]"}
  FullForm: RightVectorBar[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

RoundImplies:
  actual-precedence: 250
  Precedence-Function: 240
  precedence: 200
  WolframLanguageData:
  WolframLanguageData-corrected: 59
  UnicodeCharacters.tr: 310
  UnicodeCharacters-corrected.tr: 310
  # N-tokens: {}
  # L-tokens: {"⥰"}
  # O-tokens: {}
  usage: "expr1 ⥰ expr2"
  # parse: {"RoundImplies", "[", "expr1", ",", "expr2", "]"}
  FullForm: RoundImplies[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: right
  meaningful: false
  # comments:

Rule:
  actual-precedence: 140
  precedence: 120
  WolframLanguageData: 67
  WolframLanguageData-corrected: 67.5
  UnicodeCharacters.tr: 250
  UnicodeCharacters-corrected.tr: 250
  # N-tokens: {}
  # L-tokens: {"->", ""}
  # O-tokens: {}
  usage: "expr1", "->", "expr2"}, {"expr1  expr2"
  # parse: {"Rule", "[", "expr1", ",", "expr2", "]"}
  FullForm: Rule[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: right
  meaningful: true
  # comments:

RuleDelayed:
  actual-precedence: 150
  precedence: 120
  WolframLanguageData: 67
  WolframLanguageData-corrected: 67
  UnicodeCharacters.tr: 250
  UnicodeCharacters-corrected.tr: 250
  # N-tokens: {}
  # L-tokens: {":>", ""}
  # O-tokens: {}
  usage: "expr1", ":>", "expr2"}, {"expr1  expr2"
  # parse: {"RuleDelayed", "[", "expr1", ",", "expr2", "]"}
  FullForm: RuleDelayed[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: right
  meaningful: true
  # comments:

SameQ:
  actual-precedence: 330
  Precedence-Function: 290
  precedence: 260
  WolframLanguageData: 51
  WolframLanguageData-corrected: 51
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 370
  # N-tokens: {}
  # L-tokens: {"==="}
  # O-tokens: {}
  usage: "expr1 === expr2"
  # parse: {"SameQ", "[", "expr1", ",", "expr2", "]"}
  FullForm: SameQ[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: true
  # comments:

Set:
  actual-precedence: 50
  precedence: 40
  WolframLanguageData: 75
  WolframLanguageData-corrected: 75
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 190
  # N-tokens: {}
  # L-tokens: {"="}
  # O-tokens: {}
  usage: "expr1 = expr2"
  # parse: {"Set", "[", "expr1", ",", "expr2", "]"}
  FullForm: Set[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: right
  meaningful: true
  # comments:

SetDelayed:
  actual-precedence: 50
  precedence: 40
  WolframLanguageData: 75
  WolframLanguageData-corrected: 75
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 190
  # N-tokens: {}
  # L-tokens: {":="}
  # O-tokens: {}
  usage: "expr1 := expr2"
  # parse: {"SetDelayed", "[", "expr1", ",", "expr2", "]"}
  FullForm: SetDelayed[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: right
  meaningful: true
  # comments:

ShortDownArrow:
  actual-precedence: 740
  precedence: 580
  WolframLanguageData:
  WolframLanguageData-corrected: 21.5
  UnicodeCharacters.tr: 650
  UnicodeCharacters-corrected.tr: 650
  # N-tokens: {}
  # L-tokens: {""}
  # O-tokens: {}
  usage: "x  y"
  # parse: {"ShortDownArrow", "[", "x", ",", "y", "]"}
  FullForm: ShortDownArrow[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

ShortLeftArrow:
  actual-precedence: 340
  precedence: 270
  WolframLanguageData:
  WolframLanguageData-corrected: 50.6
  UnicodeCharacters.tr: 380
  UnicodeCharacters-corrected.tr: 380
  # N-tokens: {}
  # L-tokens: {""}
  # O-tokens: {}
  usage: "x  y"
  # parse: {"ShortLeftArrow", "[", "x", ",", "y", "]"}
  FullForm: ShortLeftArrow[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

ShortRightArrow:
  actual-precedence: 340
  precedence: 270
  WolframLanguageData:
  WolframLanguageData-corrected: 50.6
  UnicodeCharacters.tr: 380
  UnicodeCharacters-corrected.tr: 380
  # N-tokens: {}
  # L-tokens: {""}
  # O-tokens: {}
  usage: "x  y"
  # parse: {"ShortRightArrow", "[", "x", ",", "y", "]"}
  FullForm: ShortRightArrow[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

ShortUpArrow:
  actual-precedence: 740
  precedence: 580
  WolframLanguageData:
  WolframLanguageData-corrected: 21.5
  UnicodeCharacters.tr: 650
  UnicodeCharacters-corrected.tr: 650
  # N-tokens: {}
  # L-tokens: {""}
  # O-tokens: {}
  usage: "x  y"
  # parse: {"ShortUpArrow", "[", "x", ",", "y", "]"}
  FullForm: ShortUpArrow[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

Skeleton:
  actual-precedence: -10
  Precedence-Function: 670
  precedence: 760
  WolframLanguageData:
  WolframLanguageData-corrected: 1
  UnicodeCharacters.tr: -10
  UnicodeCharacters-corrected.tr: -10
  # N-tokens: {""}
  # L-tokens: {}
  # O-tokens: {""}
  usage: " n "
  # parse: {"Skeleton","[","n","]"}
  FullForm: Skeleton[n]
  arity: Unary
  affix: Matchfix
  associativity: null
  meaningful: true
  # comments:

Slot:
  actual-precedence: 1040
  precedence: 740
  WolframLanguageData: 3
  WolframLanguageData-corrected: 3
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 840
  # N-tokens: {"#"}
  # L-tokens: {}
  # O-tokens: {}
  usage: "{{"#"}}"
  # parse: {"Slot", "[", "1", "]"}
  FullForm: Slot[1]
  arity: Nullary
  affix: None
  associativity: null
  meaningful: true
  # comments:

SlotNumber:
  actual-precedence: 1050
  precedence: 740
  WolframLanguageData: 3
  WolframLanguageData-corrected: 3
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 840
  # N-tokens: {"#"}
  # L-tokens: {}
  # O-tokens: {}
  usage: "{{"#", "n"}}"
  # parse: {"Slot", "[", "n", "]"}
  FullForm: Slot[n]
  arity: Unary
  affix: Prefix
  associativity: null
  meaningful: true
  # comments:

SlotSequence:
  actual-precedence: 1040
  precedence: 740
  WolframLanguageData: 3
  WolframLanguageData-corrected: 3
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 840
  # N-tokens: {"##"}
  # L-tokens: {}
  # O-tokens: {}
  usage: "{{"##"}}"
  # parse: {"SlotSequence", "[", "1", "]"}
  FullForm: SlotSequence[1]
  arity: Nullary
  affix: None
  associativity: null
  meaningful: true
  # comments:

SlotSequenceNumber:
  actual-precedence: 1050
  precedence: 740
  WolframLanguageData: 3
  WolframLanguageData-corrected: 3
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 840
  # N-tokens: {"##"}
  # L-tokens: {}
  # O-tokens: {}
  usage: "{{"##", "n"}}"
  # parse: {"SlotSequence", "[", "n", "]"}
  FullForm: SlotSequence[n]
  arity: Unary
  affix: Prefix
  associativity: null
  meaningful: true
  # comments:

SmallCircle:
  actual-precedence: 670
  precedence: 530
  WolframLanguageData: 25
  WolframLanguageData-corrected: 25.6
  UnicodeCharacters.tr: 607
  UnicodeCharacters-corrected.tr: 609
  # N-tokens: {}
  # L-tokens: {"∘"}
  # O-tokens: {}
  usage: "expr1 ∘ expr2"
  # parse: {"SmallCircle", "[", "expr1", ",", "expr2", "]"}
  FullForm: SmallCircle[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

Span:
  actual-precedence: 390
  precedence: 305
  WolframLanguageData: 49
  WolframLanguageData-corrected: 47
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 420
  # N-tokens: {";;"}
  # L-tokens: {";;"}
  # O-tokens: {";;"}
  usage: "i", ";;", "j ;; k"
  # parse: {"Span", "[", "i", ",", "j", ",", "k", "]"}
  FullForm: Span[i, j, k]
  arity: Ternary
  affix: Infix
  associativity: null
  meaningful: true
  # comments:

Sqrt:
  actual-precedence: 730
  Precedence-Function: 670
  precedence: 570
  WolframLanguageData: 22
  WolframLanguageData-corrected: 22
  UnicodeCharacters.tr: 650
  UnicodeCharacters-corrected.tr: 640
  # N-tokens: {"√"}
  # L-tokens: {}
  # O-tokens: {}
  usage: "{{"√", "expr"}}"
  # parse: {"Sqrt", "[", "expr", "]"}
  FullForm: Sqrt[expr]
  arity: Unary
  affix: Prefix
  associativity: right
  meaningful: true
  # comments:

SqrtBox:
  actual-precedence: 730
  Precedence-Function: 670
  precedence: 570
  WolframLanguageData: 22
  WolframLanguageData-corrected: 22
  UnicodeCharacters.tr: 650
  UnicodeCharacters-corrected.tr: 640
  # N-tokens: {"\@"}
  # L-tokens: {}
  # O-tokens: {}
  usage: "{{"\@", "expr"}}"
  # parse: {"SqrtBox", "[", "expr", "]"}
  FullForm:
  arity: Unary
  affix: Prefix
  associativity: right
  meaningful: true
  # comments:

Square:
  actual-precedence: 690
  precedence: 540
  WolframLanguageData: 25
  WolframLanguageData-corrected: 25
  UnicodeCharacters.tr: 610
  UnicodeCharacters-corrected.tr: 611
  # N-tokens: {""}
  # L-tokens: {}
  # O-tokens: {}
  usage: "{{"", "expr"}}"
  # parse: {"Square", "[", "expr", "]"}
  FullForm: Square[expr]
  arity: Unary
  affix: Prefix
  associativity: right
  meaningful: false
  # comments:

SquareIntersection:
  actual-precedence: 390
  precedence: 305
  WolframLanguageData:
  WolframLanguageData-corrected: 47
  UnicodeCharacters.tr: 420
  UnicodeCharacters-corrected.tr: 420
  # N-tokens: {}
  # L-tokens: {"⊓"}
  # O-tokens: {}
  usage: "x ⊓ y"
  # parse: {"SquareIntersection", "[", "x", ",", "y", "]"}
  FullForm: SquareIntersection[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

SquareSubset:
  actual-precedence: 320
  precedence: 250
  WolframLanguageData:
  WolframLanguageData-corrected: 52
  UnicodeCharacters.tr: 360
  UnicodeCharacters-corrected.tr: 360
  # N-tokens: {}
  # L-tokens: {"⊏"}
  # O-tokens: {}
  usage: "x ⊏ y"
  # parse: {"SquareSubset", "[", "x", ",", "y", "]"}
  FullForm: SquareSubset[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

SquareSubsetEqual:
  actual-precedence: 320
  precedence: 250
  WolframLanguageData:
  WolframLanguageData-corrected: 52
  UnicodeCharacters.tr: 360
  UnicodeCharacters-corrected.tr: 360
  # N-tokens: {}
  # L-tokens: {"⊑"}
  # O-tokens: {}
  usage: "x ⊑ y"
  # parse: {"SquareSubsetEqual", "[", "x", ",", "y", "]"}
  FullForm: SquareSubsetEqual[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

SquareSuperset:
  actual-precedence: 320
  precedence: 250
  WolframLanguageData:
  WolframLanguageData-corrected: 52
  UnicodeCharacters.tr: 360
  UnicodeCharacters-corrected.tr: 360
  # N-tokens: {}
  # L-tokens: {"⊐"}
  # O-tokens: {}
  usage: "x ⊐ y"
  # parse: {"SquareSuperset", "[", "x", ",", "y", "]"}
  FullForm: SquareSuperset[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

SquareSupersetEqual:
  actual-precedence: 320
  precedence: 250
  WolframLanguageData:
  WolframLanguageData-corrected: 52
  UnicodeCharacters.tr: 360
  UnicodeCharacters-corrected.tr: 360
  # N-tokens: {}
  # L-tokens: {"⊒"}
  # O-tokens: {}
  usage: "x ⊒ y"
  # parse: {"SquareSupersetEqual", "[", "x", ",", "y", "]"}
  FullForm: SquareSupersetEqual[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

SquareUnion:
  actual-precedence: 380
  precedence: 300
  WolframLanguageData:
  WolframLanguageData-corrected: 48
  UnicodeCharacters.tr: 410
  UnicodeCharacters-corrected.tr: 410
  # N-tokens: {}
  # L-tokens: {"⊔"}
  # O-tokens: {}
  usage: "x ⊔ y"
  # parse: {"SquareUnion", "[", "x", ",", "y", "]"}
  FullForm: SquareUnion[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

Star:
  actual-precedence: 490
  precedence: 390
  WolframLanguageData: 39
  WolframLanguageData-corrected: 39
  UnicodeCharacters.tr: 510
  UnicodeCharacters-corrected.tr: 510
  # N-tokens: {}
  # L-tokens: {"⋆"}
  # O-tokens: {}
  usage: "expr1 ⋆ expr2"
  # parse: {"Star", "[", "expr1", ",", "expr2", "]"}
  FullForm: Star[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

StringExpression:
  actual-precedence: 180
  precedence: 135
  WolframLanguageData: 65
  WolframLanguageData-corrected: 65
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 265
  # N-tokens: {}
  # L-tokens: {"~~"}
  # O-tokens: {}
  usage: "expr1 ~~ expr2"
  # parse: {"StringExpression", "[", "expr1", ",", "exrp2", "]"}
  FullForm: StringExpression[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: true
  # comments:

StringJoin:
  actual-precedence: 760
  precedence: 600
  WolframLanguageData: 20
  WolframLanguageData-corrected: 20
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 670
  # N-tokens: {}
  # L-tokens: {"<>"}
  # O-tokens: {}
  usage: "expr1 <> expr2"
  # parse: {"StringJoin", "[", "expr1", ",", "expr2", "]"}
  FullForm: StringJoin[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: true
  # comments:

SubscriptBox:
  actual-precedence: 920
  Precedence-Function: 670
  precedence: 690
  WolframLanguageData: 8
  WolframLanguageData-corrected: 8
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 775
  # N-tokens: {}
  # L-tokens: {"\_"}
  # O-tokens: {}
  usage: "expr1 \_ expr2"
  # parse: {"SubscriptBox", "[", "expr1", ",", "expr2", "]"}
  FullForm:
  arity: Binary
  affix: Infix
  associativity: missing["unknown"]
  meaningful: true
  # comments:

Subset:
  actual-precedence: 320
  precedence: 250
  WolframLanguageData: 52
  WolframLanguageData-corrected: 52
  UnicodeCharacters.tr: 360
  UnicodeCharacters-corrected.tr: 360
  # N-tokens: {}
  # L-tokens: {"⊂"}
  # O-tokens: {}
  usage: "expr1 ⊂ expr2"
  # parse: {"Subset", "[", "expr1", ",", "expr2", "]"}
  FullForm: Subset[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

SubsetEqual:
  actual-precedence: 320
  precedence: 250
  WolframLanguageData:
  WolframLanguageData-corrected: 52
  UnicodeCharacters.tr: 360
  UnicodeCharacters-corrected.tr: 360
  # N-tokens: {}
  # L-tokens: {"⊆"}
  # O-tokens: {}
  usage: "x ⊆ y"
  # parse: {"SubsetEqual", "[", "x", ",", "y", "]"}
  FullForm: SubsetEqual[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

SubsuperscriptBox:
  actual-precedence: 920
  Precedence-Function: 670
  precedence: 690
  WolframLanguageData: 8
  WolframLanguageData-corrected: 8
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 775
  # N-tokens: {}
  # L-tokens: {"\_"}
  # O-tokens: {"\%"}
  usage: "expr1", "\_", "expr2 \% expr3"
  # parse: {"SubsuperscriptBox", "[", "expr1", ",", "expr2", ",", "expr3", "]"}
  FullForm:
  arity: Ternary
  affix: Infix
  associativity: missing["unknown"]
  meaningful: true
  # comments:

Subtract:
  actual-precedence: 400
  precedence: 310
  WolframLanguageData: 46
  WolframLanguageData-corrected: 46
  UnicodeCharacters.tr: 430
  UnicodeCharacters-corrected.tr: 430
  # N-tokens: {}
  # L-tokens: {"-", "−"}
  # O-tokens: {}
  usage: "expr1", "-", "expr2"}, {"expr1 − expr2"
  # parse: {"Subtract", "[", "expr1", ",", "expr2", "]"}
  FullForm: Plus[expr1, Times[-1, expr2]]
  arity: Binary
  affix: Infix
  associativity: left
  meaningful: true
  # comments: Operator Notations includes usages with invisible unicode characters.

SubtractFrom:
  actual-precedence: 120
  precedence: 100
  WolframLanguageData: 69
  WolframLanguageData-corrected: 69
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 230
  # N-tokens: {}
  # L-tokens: {"-="}
  # O-tokens: {}
  usage: "expr1 -= expr2"
  # parse: {"SubtractFrom", "[", "expr1", ",", "expr2", "]"}
  FullForm: SubtractFrom[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: right
  meaningful: true
  # comments:

Succeeds:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"≻"}
  # O-tokens: {}
  usage: "x ≻ y"
  # parse: {"Succeeds", "[", "x", ",", "y", "]"}
  FullForm: Succeeds[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

SucceedsEqual:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"⪰"}
  # O-tokens: {}
  usage: "x ⪰ y"
  # parse: {"SucceedsEqual", "[", "x", ",", "y", "]"}
  FullForm: SucceedsEqual[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

SucceedsSlantEqual:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"≽"}
  # O-tokens: {}
  usage: "x ≽ y"
  # parse: {"SucceedsSlantEqual", "[", "x", ",", "y", "]"}
  FullForm: SucceedsSlantEqual[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

SucceedsTilde:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"≿"}
  # O-tokens: {}
  usage: "x ≿ y"
  # parse: {"SucceedsTilde", "[", "x", ",", "y", "]"}
  FullForm: SucceedsTilde[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

SuchThat:
  actual-precedence: 210
  precedence: 180
  WolframLanguageData: 61
  WolframLanguageData-corrected: 61
  UnicodeCharacters.tr: 290
  UnicodeCharacters-corrected.tr: 290
  # N-tokens: {}
  # L-tokens: {"∍"}
  # O-tokens: {}
  usage: "expr1 ∍ expr2"
  # parse: {"SuchThat", "[", "expr1", ",", "expr2", "]"}
  FullForm: SuchThat[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: right
  meaningful: false
  # comments:

Sum:
  actual-precedence: 420
  Precedence-Function: 320
  precedence: 325
  WolframLanguageData: 45
  WolframLanguageData-corrected: 45
  UnicodeCharacters.tr: 440
  UnicodeCharacters-corrected.tr: 445
  # N-tokens: {"∑"}
  # L-tokens: {}
  # O-tokens: {}
  usage: "{{"∑", "expr"}}"
  # parse: {"Sum", "[", "expr", "]"}
  FullForm: Sum[expr]
  arity: Unary
  affix: Prefix
  associativity: right
  meaningful: true
  # comments: Usage and Parse may not be correct.

SuperDagger:
  actual-precedence: 780
  Precedence-Function: 0
  precedence: 605
  WolframLanguageData:
  WolframLanguageData-corrected: 18
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 695
  # N-tokens: {}
  # L-tokens: {"^†"}
  # O-tokens: {}
  usage: "{{"expr", "^†"}}"
  # parse: {"SuperDagger", "[", "expr", "]"}
  FullForm: Power[expr, \[Dagger]]
  arity: Unary
  affix: Postfix
  associativity: left
  meaningful: true
  # comments:

SuperscriptBox:
  actual-precedence: 750
  precedence: 590
  WolframLanguageData: 21
  WolframLanguageData-corrected: 21
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 660
  # N-tokens: {}
  # L-tokens: {"\^"}
  # O-tokens: {}
  usage: "expr1 \^ expr2"
  # parse: {"SuperscriptBox", "[", "expr1", ",", "expr2", "]"}
  FullForm:
  arity: Binary
  affix: Infix
  associativity: right
  meaningful: true
  # comments:

Superset:
  actual-precedence: 320
  precedence: 250
  WolframLanguageData: 52
  WolframLanguageData-corrected: 52
  UnicodeCharacters.tr: 360
  UnicodeCharacters-corrected.tr: 360
  # N-tokens: {}
  # L-tokens: {"⊃"}
  # O-tokens: {}
  usage: "expr1 ⊃ expr2"
  # parse: {"Superset", "[", "expr1", ",", "expr2", "]"}
  FullForm: Superset[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

SupersetEqual:
  actual-precedence: 320
  precedence: 250
  WolframLanguageData:
  WolframLanguageData-corrected: 52
  UnicodeCharacters.tr: 360
  UnicodeCharacters-corrected.tr: 360
  # N-tokens: {}
  # L-tokens: {"⊇"}
  # O-tokens: {}
  usage: "x ⊇ y"
  # parse: {"SupersetEqual", "[", "x", ",", "y", "]"}
  FullForm: SupersetEqual[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

SupersubscriptBox:
  actual-precedence: 750
  Precedence-Function: 690
  precedence: 590
  WolframLanguageData: 21
  WolframLanguageData-corrected: 21
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 660
  # N-tokens: {}
  # L-tokens: {"\^"}
  # O-tokens: {"\%"}
  usage: "expr1", "\^", "expr2 \% expr3"
  # parse: {"SubsuperscriptBox", "[", "expr1", ",", "expr3", ",", "expr2", "]"}
  FullForm:
  arity: Ternary
  affix: Infix
  associativity: right
  meaningful: true
  # comments:

TagSet:
  actual-precedence: 50
  Precedence-Function: 670
  precedence: 40
  WolframLanguageData: 75
  WolframLanguageData-corrected: 75
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 190
  # N-tokens: {}
  # L-tokens: {"/:"}
  # O-tokens: {"="}
  usage: "symb", "/:", "expr1 = expr2"
  # parse: {"TagSet", "[", "symb", ",", "expr1", "]"}
  FullForm: TagSet[symb, expr1, expr2]
  arity: Ternary
  affix: Infix
  associativity: right
  meaningful: true
  # comments:

TagSetDelayed:
  actual-precedence: 50
  Precedence-Function: 670
  precedence: 40
  WolframLanguageData: 75
  WolframLanguageData-corrected: 75
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 190
  # N-tokens: {}
  # L-tokens: {"/:"}
  # O-tokens: {":="}
  usage: "symb", "/:", "expr1 := expr2"
  # parse: {"TagSetDelayed", "[", "symb", ",", "expr1", "]"}
  FullForm: TagSetDelayed[symb, expr1, expr2]
  arity: Ternary
  affix: Infix
  associativity: right
  meaningful: true
  # comments:

TagUnset:
  actual-precedence: 50
  Precedence-Function: 670
  precedence: 40
  WolframLanguageData: 75
  WolframLanguageData-corrected: 75
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 190
  # N-tokens: {}
  # L-tokens: {"/;"}
  # O-tokens: {"=."}
  usage: "symb", "/; expr =."
  # parse: {"TagUnset", "[", "symb", ",", "expr", "]"}
  FullForm: Unset[Condition[symb, expr]]
  arity: Binary
  affix: Infix
  associativity: right
  meaningful: true
  # comments:

TensorProduct:
  actual-precedence: 610
  Precedence-Function: 495
  precedence: 487
  WolframLanguageData:
  WolframLanguageData-corrected: 29.6
  UnicodeCharacters.tr: 602
  UnicodeCharacters-corrected.tr: 603
  # N-tokens: {}
  # L-tokens: {""}
  # O-tokens: {}
  usage: "expr1  expr2"
  # parse: {"TensorProduct", "[", "expr1", ",", "expr2", "]"}
  FullForm: TensorProduct[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: true
  # comments:

TensorWedge:
  actual-precedence: 620
  Precedence-Function: 500
  precedence: 488
  WolframLanguageData:
  WolframLanguageData-corrected: 29.5
  UnicodeCharacters.tr: 603
  UnicodeCharacters-corrected.tr: 604
  # N-tokens: {}
  # L-tokens: {""}
  # O-tokens: {}
  usage: "expr1  expr2"
  # parse: {"TensorWedge", "[", "expr1", ",", "expr2", "]"}
  FullForm: TensorWedge[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: true
  # comments:

Therefore:
  actual-precedence: 70
  precedence: 50
  WolframLanguageData: 74
  WolframLanguageData-corrected: 73.5
  UnicodeCharacters.tr: 201
  UnicodeCharacters-corrected.tr: 202
  # N-tokens: {}
  # L-tokens: {"∴"}
  # O-tokens: {}
  usage: "expr1 ∴ expr2"
  # parse: {"Therefore", "[", "expr1", ",", "expr2", "]"}
  FullForm: Therefore[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: right
  meaningful: false
  # comments: Precedence of Therefore and Because are swapped in notebook versus ToExpression.

Tilde:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"∼"}
  # O-tokens: {}
  usage: "x ∼ y"
  # parse: {"Tilde", "[", "x", ",", "y", "]"}
  FullForm: Tilde[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

TildeEqual:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"≃"}
  # O-tokens: {}
  usage: "x ≃ y"
  # parse: {"TildeEqual", "[", "x", ",", "y", "]"}
  FullForm: TildeEqual[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

TildeFullEqual:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"≅"}
  # O-tokens: {}
  usage: "x ≅ y"
  # parse: {"TildeFullEqual", "[", "x", ",", "y", "]"}
  FullForm: TildeFullEqual[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

TildeTilde:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData:
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"≈"}
  # O-tokens: {}
  usage: "x ≈ y"
  # parse: {"TildeTilde", "[", "x", ",", "y", "]"}
  FullForm: TildeTilde[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

Times:
  actual-precedence: 500
  precedence: 400
  WolframLanguageData: 38
  WolframLanguageData-corrected: 38
  UnicodeCharacters.tr: 520
  UnicodeCharacters-corrected.tr: 520
  # N-tokens: {}
  # L-tokens: {"*", "×", "
  # O-tokens: {}
  usage: "{{"expr1", "*", "expr2"}, {"expr1", "expr2"}, {"expr1", "×", "expr2"}, {"expr1", ""
  # parse: {"Times", "[", "expr1", ",", "expr2", "]"}
  FullForm: Times[expr1, expr2]
  arity: Nullary
  affix: None
  associativity: null
  meaningful: true
  # comments: Operator Notations includes usages with invisible unicode characters.

TimesBy:
  actual-precedence: 120
  precedence: 100
  WolframLanguageData: 69
  WolframLanguageData-corrected: 69
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 230
  # N-tokens: {}
  # L-tokens: {"*="}
  # O-tokens: {}
  usage: "expr1 *= expr2"
  # parse: {"TimesBy", "[", "expr1", ",", "expr2", "]"}
  FullForm: TimesBy[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: right
  meaningful: true
  # comments:

TortoiseShellBracket:
  actual-precedence: -10
  Precedence-Function: 670
  precedence: 760
  WolframLanguageData:
  WolframLanguageData-corrected: 1
  UnicodeCharacters.tr: -10
  UnicodeCharacters-corrected.tr: -10
  # N-tokens: {"〔"}
  # L-tokens: {}
  # O-tokens: {"〕"}
  usage: "〔 expr 〕"
  # parse:
  FullForm:
  arity: Unary
  affix: Matchfix
  associativity: null
  meaningful: true
  # comments:

Transpose:
  actual-precedence: 780
  Precedence-Function: 670
  precedence: 605
  WolframLanguageData: 18
  WolframLanguageData-corrected: 18
  UnicodeCharacters.tr: 695
  UnicodeCharacters-corrected.tr: 695
  # N-tokens: {}
  # L-tokens: {""}
  # O-tokens: {}
  usage: "{{"expr", ""}}"
  # parse: {"Transpose", "[", "expr", "]"}
  FullForm: Transpose[expr]
  arity: Unary
  affix: Postfix
  associativity: left
  meaningful: true
  # comments:

TwoWayRule:
  actual-precedence: 160
  precedence: 125
  WolframLanguageData:
  WolframLanguageData-corrected: 66.5
  UnicodeCharacters.tr: 255
  UnicodeCharacters-corrected.tr: 255
  # N-tokens: {}
  # L-tokens: {"<->", ""}
  # O-tokens: {}
  usage: "expr1", "<->", "expr2"}, {"expr1  expr2"
  # parse: {"TwoWayRule", "[", "expr1", ",", "expr2", "]"}
  FullForm: TwoWayRule[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: right
  meaningful: true
  # comments:

UnaryMinusPlus:
  actual-precedence: 580
  Precedence-Function: 310
  precedence: 480
  WolframLanguageData: 30
  WolframLanguageData-corrected: 30
  UnicodeCharacters.tr: 430
  UnicodeCharacters-corrected.tr: 600
  # N-tokens: {"∓"}
  # L-tokens: {}
  # O-tokens: {}
  usage: "{{"∓", "expr"}}"
  # parse: {"MinusPlus", "[", "expr", "]"}
  FullForm: MinusPlus[expr]
  arity: Unary
  affix: Prefix
  associativity: right
  meaningful: false
  # comments:

UnaryPlus:
  actual-precedence: 580
  Precedence-Function: 310
  precedence: 480
  WolframLanguageData:
  WolframLanguageData-corrected: 30
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 600
  # N-tokens: {"+"}
  # L-tokens: {}
  # O-tokens: {}
  usage: "{{"+", "expr"}}"
  # parse: {"Plus", "[", "expr", "]"}
  FullForm: Plus[expr]
  arity: Unary
  affix: Prefix
  associativity: right
  meaningful: true
  # comments: Converts to expr on input.

UnaryPlusMinus:
  actual-precedence: 580
  Precedence-Function: 310
  precedence: 480
  WolframLanguageData: 30
  WolframLanguageData-corrected: 30
  UnicodeCharacters.tr: 430
  UnicodeCharacters-corrected.tr: 600
  # N-tokens: {"±"}
  # L-tokens: {}
  # O-tokens: {}
  usage: "{{"±", "expr"}}"
  # parse: {"PlusMinus", "[", "expr", "]"}
  FullForm: PlusMinus[expr]
  arity: Unary
  affix: Prefix
  associativity: right
  meaningful: false
  # comments:

UnderoverscriptBox:
  actual-precedence: 940
  Precedence-Function: 670
  precedence: 700
  WolframLanguageData: 7
  WolframLanguageData-corrected: 7.5
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 785
  # N-tokens: {}
  # L-tokens: {"\+"}
  # O-tokens: {"\%"}
  usage: "expr1", "\+", "expr2 \% expr3"
  # parse: {"UnderoverscriptBox", "[", "expr1", ",", "expr2", ",", "expr3", "]"}
  FullForm:
  arity: Ternary
  affix: Infix
  associativity: missing["unknown"]
  meaningful: true
  # comments:

UnderscriptBox:
  actual-precedence: 950
  Precedence-Function: 670
  precedence: 710
  WolframLanguageData: 7
  WolframLanguageData-corrected: 7
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 790
  # N-tokens: {}
  # L-tokens: {"\+"}
  # O-tokens: {}
  usage: "expr1 \+ expr2"
  # parse: {"UnderscriptBox", "[", "expr1", ",", "expr2", "]"}
  FullForm:
  arity: Binary
  affix: Infix
  associativity: missing["unknown"]
  meaningful: true
  # comments:

UndirectedEdge:
  actual-precedence: 370
  precedence: 295
  WolframLanguageData:
  WolframLanguageData-corrected: 49
  UnicodeCharacters.tr: 395
  UnicodeCharacters-corrected.tr: 395
  # N-tokens: {}
  # L-tokens: {""}
  # O-tokens: {}
  usage: "expr1  expr2"
  # parse: {"UndirectedEdge", "[", "expr1", ",", "expr2", "]"}
  FullForm: UndirectedEdge[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: true
  # comments:

Unequal:
  actual-precedence: 360
  precedence: 290
  WolframLanguageData: 50
  WolframLanguageData-corrected: 50
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"!=", "≠"}
  # O-tokens: {}
  usage: "expr1", "!=", "expr2"}, {"expr1 ≠ expr2"
  # parse: {"Unequal", "[", "expr1", ",", "expr2", "]"}
  FullForm: Unequal[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: true
  # comments:

Union:
  actual-precedence: 380
  precedence: 300
  WolframLanguageData: 48
  WolframLanguageData-corrected: 48
  UnicodeCharacters.tr: 410
  UnicodeCharacters-corrected.tr: 410
  # N-tokens: {}
  # L-tokens: {"⋃"}
  # O-tokens: {}
  usage: "expr1 ⋃ expr2"
  # parse: {"Union", "[", "expr1", ",", "expr2", "]"}
  FullForm: Union[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: true
  # comments:

UnionPlus:
  actual-precedence: 380
  precedence: 300
  WolframLanguageData:
  WolframLanguageData-corrected: 48
  UnicodeCharacters.tr: 410
  UnicodeCharacters-corrected.tr: 410
  # N-tokens: {}
  # L-tokens: {"⊎"}
  # O-tokens: {}
  usage: "x ⊎ y"
  # parse: {"UnionPlus", "[", "x", ",", "y", "]"}
  FullForm: UnionPlus[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

UnsameQ:
  actual-precedence: 330
  Precedence-Function: 290
  precedence: 260
  WolframLanguageData: 51
  WolframLanguageData-corrected: 51
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 370
  # N-tokens: {}
  # L-tokens: {"=!="}
  # O-tokens: {}
  usage: "expr1 =!= expr2"
  # parse: {"UnsameQ", "[", "expr1", ",", "expr2", "]"}
  FullForm: UnsameQ[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: true
  # comments:

Unset:
  actual-precedence: 50
  Precedence-Function: 670
  precedence: 40
  WolframLanguageData: 75
  WolframLanguageData-corrected: 75
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 190
  # N-tokens: {}
  # L-tokens: {"=."}
  # O-tokens: {}
  usage: "{{"expr", "=."}}"
  # parse: {"Unset", "[", "expr", "]"}
  FullForm: Unset[expr]
  arity: Unary
  affix: Postfix
  associativity: left
  meaningful: true
  # comments:

UpArrow:
  actual-precedence: 740
  precedence: 580
  WolframLanguageData:
  WolframLanguageData-corrected: 21.5
  UnicodeCharacters.tr: 650
  UnicodeCharacters-corrected.tr: 650
  # N-tokens: {}
  # L-tokens: {"↑"}
  # O-tokens: {}
  usage: "x ↑ y"
  # parse: {"UpArrow", "[", "x", ",", "y", "]"}
  FullForm: UpArrow[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

UpArrowBar:
  actual-precedence: 740
  precedence: 580
  WolframLanguageData:
  WolframLanguageData-corrected: 21.5
  UnicodeCharacters.tr: 650
  UnicodeCharacters-corrected.tr: 650
  # N-tokens: {}
  # L-tokens: {"⤒"}
  # O-tokens: {}
  usage: "x ⤒ y"
  # parse: {"UpArrowBar", "[", "x", ",", "y", "]"}
  FullForm: UpArrowBar[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

UpArrowDownArrow:
  actual-precedence: 740
  precedence: 580
  WolframLanguageData:
  WolframLanguageData-corrected: 21.5
  UnicodeCharacters.tr: 650
  UnicodeCharacters-corrected.tr: 650
  # N-tokens: {}
  # L-tokens: {"⇅"}
  # O-tokens: {}
  usage: "x ⇅ y"
  # parse: {"UpArrowDownArrow", "[", "x", ",", "y", "]"}
  FullForm: UpArrowDownArrow[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

UpDownArrow:
  actual-precedence: 740
  precedence: 580
  WolframLanguageData:
  WolframLanguageData-corrected: 21.5
  UnicodeCharacters.tr: 650
  UnicodeCharacters-corrected.tr: 650
  # N-tokens: {}
  # L-tokens: {"↕"}
  # O-tokens: {}
  usage: "x ↕ y"
  # parse: {"UpDownArrow", "[", "x", ",", "y", "]"}
  FullForm: UpDownArrow[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

UpEquilibrium:
  actual-precedence: 740
  precedence: 580
  WolframLanguageData:
  WolframLanguageData-corrected: 21.5
  UnicodeCharacters.tr: 650
  UnicodeCharacters-corrected.tr: 650
  # N-tokens: {}
  # L-tokens: {"⥮"}
  # O-tokens: {}
  usage: "x ⥮ y"
  # parse: {"UpEquilibrium", "[", "x", ",", "y", "]"}
  FullForm: UpEquilibrium[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

UpSet:
  actual-precedence: 50
  precedence: 40
  WolframLanguageData: 75
  WolframLanguageData-corrected: 75
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 190
  # N-tokens: {}
  # L-tokens: {"^="}
  # O-tokens: {}
  usage: "expr1 ^= expr2"
  # parse: {"UpSet", "[", "expr1", ",", "expr2", "]"}
  FullForm: UpSet[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: right
  meaningful: true
  # comments:

UpSetDelayed:
  actual-precedence: 50
  precedence: 40
  WolframLanguageData: 75
  WolframLanguageData-corrected: 75
  UnicodeCharacters.tr:
  UnicodeCharacters-corrected.tr: 190
  # N-tokens: {}
  # L-tokens: {"^:="}
  # O-tokens: {}
  usage: "expr1 ^:= expr2"
  # parse: {"UpSetDelayed", "[", "expr1", ",", "expr2", "]"}
  FullForm: UpSetDelayed[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: right
  meaningful: true
  # comments:

UpTee:
  actual-precedence: 220
  precedence: 190
  WolframLanguageData: 60
  WolframLanguageData-corrected: 60
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 390
  # N-tokens: {}
  # L-tokens: {"⊥"}
  # O-tokens: {}
  usage: "expr1 ⊥ expr2"
  # parse: {"UpTee", "[", "expr1", ",", "expr2", "]"}
  FullForm: UpTee[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: left
  meaningful: false
  # comments:

UpTeeArrow:
  actual-precedence: 740
  precedence: 580
  WolframLanguageData:
  WolframLanguageData-corrected: 21.5
  UnicodeCharacters.tr: 650
  UnicodeCharacters-corrected.tr: 650
  # N-tokens: {}
  # L-tokens: {"↥"}
  # O-tokens: {}
  usage: "x ↥ y"
  # parse: {"UpTeeArrow", "[", "x", ",", "y", "]"}
  FullForm: UpTeeArrow[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

UpperLeftArrow:
  actual-precedence: 340
  precedence: 270
  WolframLanguageData:
  WolframLanguageData-corrected: 50.6
  UnicodeCharacters.tr: 380
  UnicodeCharacters-corrected.tr: 380
  # N-tokens: {}
  # L-tokens: {"↖"}
  # O-tokens: {}
  usage: "x ↖ y"
  # parse: {"UpperLeftArrow", "[", "x", ",", "y", "]"}
  FullForm: UpperLeftArrow[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

UpperRightArrow:
  actual-precedence: 340
  precedence: 270
  WolframLanguageData:
  WolframLanguageData-corrected: 50.6
  UnicodeCharacters.tr: 380
  UnicodeCharacters-corrected.tr: 380
  # N-tokens: {}
  # L-tokens: {"↗"}
  # O-tokens: {}
  usage: "x ↗ y"
  # parse: {"UpperRightArrow", "[", "x", ",", "y", "]"}
  FullForm: UpperRightArrow[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

Vee:
  actual-precedence: 530
  precedence: 430
  WolframLanguageData:
  WolframLanguageData-corrected: 35
  UnicodeCharacters.tr: 550
  UnicodeCharacters-corrected.tr: 550
  # N-tokens: {}
  # L-tokens: {"⋁"}
  # O-tokens: {}
  usage: "x ⋁ y"
  # parse: {"Vee", "[", "x", ",", "y", "]"}
  FullForm: Vee[x, y]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

VerticalBar:
  actual-precedence: 350
  precedence: 280
  WolframLanguageData: 50
  WolframLanguageData-corrected: 50.5
  UnicodeCharacters.tr: 390
  UnicodeCharacters-corrected.tr: 385
  # N-tokens: {}
  # L-tokens: {""}
  # O-tokens: {}
  usage: "expr1  expr2"
  # parse: {"VerticalBar", "[", "expr1", ",", "expr2", "]"}
  FullForm: VerticalBar[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

VerticalSeparator:
  actual-precedence: 80
  precedence: 60
  WolframLanguageData: 73
  WolframLanguageData-corrected: 73
  UnicodeCharacters.tr: 202
  UnicodeCharacters-corrected.tr: 203
  # N-tokens: {}
  # L-tokens: {""}
  # O-tokens: {}
  usage: "expr1  expr2"
  # parse: {"VerticalSeparator", "[", "expr1", ",", "expr2", "]"}
  FullForm: VerticalSeparator[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

VerticalTilde:
  actual-precedence: 470
  precedence: 370
  WolframLanguageData: 41
  WolframLanguageData-corrected: 41
  UnicodeCharacters.tr: 490
  UnicodeCharacters-corrected.tr: 490
  # N-tokens: {}
  # L-tokens: {"≀"}
  # O-tokens: {}
  usage: "expr1 ≀ expr2"
  # parse: {"VerticalTilde", "[", "expr1", ",", "expr2", "]"}
  FullForm: VerticalTilde[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

Wedge:
  actual-precedence: 540
  precedence: 440
  WolframLanguageData: 34
  WolframLanguageData-corrected: 34
  UnicodeCharacters.tr: 560
  UnicodeCharacters-corrected.tr: 560
  # N-tokens: {}
  # L-tokens: {"⋀"}
  # O-tokens: {}
  usage: "expr1 ⋀ expr2"
  # parse: {"Wedge", "[", "expr1", ",", "expr2", "]"}
  FullForm: Wedge[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: false
  # comments:

WhiteCornerBracket:
  actual-precedence: -10
  Precedence-Function: 670
  precedence: 760
  WolframLanguageData:
  WolframLanguageData-corrected: 1
  UnicodeCharacters.tr: -10
  UnicodeCharacters-corrected.tr: -10
  # N-tokens: {"『"}
  # L-tokens: {}
  # O-tokens: {"』"}
  usage: "『 expr 』"
  # parse:
  FullForm:
  arity: Unary
  affix: Matchfix
  associativity: null
  meaningful: true
  # comments:

Xnor:
  actual-precedence: 280
  precedence: 215
  WolframLanguageData: 56
  WolframLanguageData-corrected: 56
  UnicodeCharacters.tr: 325
  UnicodeCharacters-corrected.tr: 325
  # N-tokens: {}
  # L-tokens: {""}
  # O-tokens: {}
  usage: "expr1  expr2"
  # parse: {"Xnor", "[", "expr1", ",", "expr2", "]"}
  FullForm: Xnor[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: true
  # comments:

Xor:
  actual-precedence: 280
  precedence: 215
  WolframLanguageData: 56
  WolframLanguageData-corrected: 56
  UnicodeCharacters.tr: 325
  UnicodeCharacters-corrected.tr: 325
  # N-tokens: {}
  # L-tokens: {"⊻"}
  # O-tokens: {}
  usage: "expr1 ⊻ expr2"
  # parse: {"Xor", "[", "expr1", ",", "expr2", "]"}
  FullForm: Xor[expr1, expr2]
  arity: Binary
  affix: Infix
  associativity: null
  meaningful: true
  # comments:
